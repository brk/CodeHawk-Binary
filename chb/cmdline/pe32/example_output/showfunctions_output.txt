$ python chx86_show_functions.py mwv:V001 --assembly --esp  --functions 0x4057e0

Function 0x4057e0
--------------------------------------------------------------------------------
  0x4057e0  [    0 ]  mov eax, 0x1f55c         eax = 0x1f55c                           
  0x4057e5  [    0 ]  call cav:0x4068a0        Inl:__alloca__()                        
  0x4057ea  [ -128348 ]  push ebx                 save ebx                                
  0x4057eb  [ -128352 ]  push esi                 save esi                                
  0x4057ec  [ -128356 ]  push edi                 save edi                                
  0x4057ed  [ -128360 ]  xor ebx, ebx             ebx = 0                                 
  0x4057ef  [ -128360 ]  mov ecx, 0x1f            ecx = 31                                
  0x4057f4  [ -128360 ]  xor eax, eax             eax = 0                                 
  0x4057f6  [ -128360 ]  lea edi, 0xd(esp,,1)     edi = (esp + 13) (= (esp_in - 0x1f55b)) 
  0x4057fa  [ -128360 ]  mov 0xc(esp,,1), bl      var.128348 = bl (= 0)                   
  0x4057fe  [ -128360 ]  rep stos                 rep stos:pending                        
  0x405800  [ -128360 ]  stosw                    var.128223 = 0; edi = (esp_in - 0x1f4df) + 2 (df = 0)
  0x405802  [ -128360 ]  push 0x40909c            [0x405808:1: 0x40909c: "Alert!Pls press enter to make sure!"]
  0x405807  [ -128364 ]  stosb                    var.128221 = 0; edi = (esp_in - 0x1f4dd) + 1 (df = 0)
  0x405808  [ -128364 ]  call* 0x407114           printf(format:0x40909c: "Alert!Pls press enter to make sure!") (MSVCRT.dll)
  0x40580e  [ -128364 ]  mov eax, 0x40711c        eax = 0x7c36                            
  0x405813  [ -128364 ]  push eax                 [0x405814:1: 0x7c36]                    
  0x405814  [ -128368 ]  call* 0x40713c           fflush(stream:0x7c36) (MSVCRT.dll)      
  0x40581a  [ -128368 ]  push 0x412c54            [0x405824:2: 0x412c54]                  
  0x40581f  [ -128372 ]  push 0x408220            [0x405824:1: 0x408220: "%[^\n]"]        
  0x405824  [ -128376 ]  call* 0x407138           scanf(format:0x408220: "%[^\n]",args:0x412c54) (MSVCRT.dll)
  0x40582a  [ -128376 ]  add esp, 0x10            esp := (esp + 16) (= (esp_in - 0x1f568))
  0x40582d  [ -128360 ]  mov esi, 0x409094        esi = 0x409094                          
  0x405832  [ -128360 ]  mov eax, 0x412c54        eax = 0x412c54                          
--------------------------------------------------------------------------------
  0x405837  [ -128360 ]  mov dl, (eax)            dl = ?                                  
  0x405839  [ -128360 ]  mov cl, dl               cl = dl                                 
  0x40583b  [ -128360 ]  cmp dl, (esi)                                                    
  0x40583d  [ -128360 ]  jnz cav:0x40585b         if (dl <> ??) goto 0x40585b             
--------------------------------------------------------------------------------
  0x40583f  [ -128360 ]  cmp cl, bl                                                       
  0x405841  [ -128360 ]  jz cav:0x405857          if (cl == 0) goto 0x405857              
--------------------------------------------------------------------------------
  0x405843  [ -128360 ]  mov dl, 0x1(eax)         dl = ?                                  
  0x405846  [ -128360 ]  mov cl, dl               cl = dl                                 
  0x405848  [ -128360 ]  cmp dl, 0x1(esi)                                                 
  0x40584b  [ -128360 ]  jnz cav:0x40585b         if (dl <> ??) goto 0x40585b             
--------------------------------------------------------------------------------
  0x40584d  [ -128360 ]  add eax, 0x2             eax := (eax + 2)                        
  0x405850  [ -128360 ]  add esi, 0x2             esi := (esi + 2)                        
  0x405853  [ -128360 ]  cmp cl, bl                                                       
  0x405855  [ -128360 ]  jnz cav:0x405837         if (cl <> 0) goto 0x405837              
--------------------------------------------------------------------------------
  0x405857  [ -128360 ]  xor eax, eax             eax = 0                                 
  0x405859  [ -128360 ]  jmp cav:0x405860         goto 0x405860                           
--------------------------------------------------------------------------------
  0x40585b  [ -128360 ]  sbb eax, eax             eax = (eax - eax) (= 0) or ((eax - eax) + 1) (= 1)
  0x40585d  [ -128360 ]  sbb eax, -0x1            eax = (eax - -1) or ((eax - -1) + 1) (= (eax + 2))
--------------------------------------------------------------------------------
  0x405860  [ -128360 ]  cmp eax, ebx                                                     
  0x405862  [ -128360 ]  jnz cav:0x406704         if (eax <> 0) goto 0x406704             
--------------------------------------------------------------------------------
  0x405868  [ -128360 ]  push ebx                 [0x405872:6: 0]                         
  0x405869  [ -128364 ]  push ebx                 [0x405872:5: 0]                         
  0x40586a  [ -128368 ]  push ebx                 [0x405872:4: 0]                         
  0x40586b  [ -128372 ]  push 0x406720            [0x405872:3: 0x406720]                  
  0x405870  [ -128376 ]  push ebx                 [0x405872:2: 0]                         
  0x405871  [ -128380 ]  push ebx                 [0x405872:1: 0]                         
  0x405872  [ -128384 ]  call* 0x40706c           CreateThread(lpThreadAttributes:0,dwStackSize:0,lpStartAddress:0x406720,lpParameter:0,dwCreationFlags:0,lpThreadId:0) (KERNEL32.dll)
  0x405878  [ -128360 ]  push eax                 [0x405879:1: CreateThread_rtn_0x405872] 
  0x405879  [ -128364 ]  call* 0x407084           CloseHandle(hObject:CreateThread_rtn_0x405872) (KERNEL32.dll)
  0x40587f  [ -128360 ]  cmp 0x412a14, ebx                                                
  0x405885  [ -128360 ]  jnz cav:0x406704         if (gv_0x412a14_in <> 0) goto 0x406704  
--------------------------------------------------------------------------------
  0x40588b  [ -128360 ]  push ebp                 save ebp                                
--------------------------------------------------------------------------------
  0x40588c  [ -128364 ]  mov eax, 0x4125ec        eax = gv_0x4125ec                       
  0x405891  [ -128364 ]  mov 0x412d54, ebx        gv_0x412d54 = ebx (= 0)                 
  0x405897  [ -128364 ]  cmp eax, ebx                                                     
  0x405899  [ -128364 ]  jnz cav:0x4058a9         if (eax <> 0) goto 0x4058a9             
--------------------------------------------------------------------------------
  0x40589b  [ -128364 ]  push 0x409090            [0x4058a0:1: 0x409090: "\n$"]           
  0x4058a0  [ -128368 ]  call* 0x407114           printf(format:0x409090: "\n$") (MSVCRT.dll)
  0x4058a6  [ -128368 ]  add esp, 0x4             esp := (esp + 4) (= (esp_in - 0x1f56c)) 
--------------------------------------------------------------------------------
  0x4058a9  [ -128364 ]  mov eax, 0x40711c        eax = 0x7c36                            
  0x4058ae  [ -128364 ]  push eax                 [0x4058af:1: 0x7c36]                    
  0x4058af  [ -128368 ]  call* 0x40713c           fflush(stream:0x7c36) (MSVCRT.dll)      
  0x4058b5  [ -128368 ]  mov ecx, 0x40            ecx = 64                                
  0x4058ba  [ -128368 ]  xor eax, eax             eax = 0                                 
  0x4058bc  [ -128368 ]  mov edi, 0x412c54        edi = 0x412c54                          
  0x4058c1  [ -128368 ]  push 0x412c54            [0x4058cd:2: 0x412c54]                  
  0x4058c6  [ -128372 ]  rep stos                 rep stos:pending                        
  0x4058c8  [ -128372 ]  push 0x408220            [0x4058cd:1: 0x408220: "%[^\n]"]        
  0x4058cd  [ -128376 ]  call* 0x407138           scanf(format:0x408220: "%[^\n]",args:0x412c54) (MSVCRT.dll)
  0x4058d3  [ -128376 ]  mov edi, 0x412c54        edi = 0x412c54                          
  0x4058d8  [ -128376 ]  or ecx, -0x1             ecx = -1                                
  0x4058db  [ -128376 ]  xor eax, eax             eax = 0                                 
  0x4058dd  [ -128376 ]  lea edx, 0x1c(esp,,1)    edx = (esp + 28) (= (esp_in - 0x1f55c)) 
  0x4058e1  [ -128376 ]  repne scas               repne scas:pending                      
  0x4058e3  [ -128376 ]  not ecx                  ecx = ( ~ecx)                           
  0x4058e5  [ -128376 ]  sub edi, ecx             edi := (edi - ecx)                      
  0x4058e7  [ -128376 ]  push 0x412c54            [0x405911:2: 0x412c54]                  
  0x4058ec  [ -128380 ]  mov eax, ecx             eax = ecx                               
  0x4058ee  [ -128380 ]  mov esi, edi             esi = edi                               
  0x4058f0  [ -128380 ]  mov edi, edx             edi = edx (= (esp_in - 0x1f55c))        
  0x4058f2  [ -128380 ]  push 0x412138            [0x405911:1: 0x412138]                  
  0x4058f7  [ -128384 ]  shr ecx, 0x2             ecx = (ecx >> 2) (= (ecx / 4))          
  0x4058fa  [ -128384 ]  rep movs                 rep movs:pending                        
  0x4058fc  [ -128384 ]  mov ecx, eax             ecx = eax                               
  0x4058fe  [ -128384 ]  xor eax, eax             eax = 0                                 
  0x405900  [ -128384 ]  and ecx, 0x3             ecx = (ecx & 3)                         
  0x405903  [ -128384 ]  rep movs                 rep movs:pending                        
  0x405905  [ -128384 ]  mov ecx, 0x14            ecx = 20                                
  0x40590a  [ -128384 ]  mov edi, 0x412138        edi = 0x412138                          
  0x40590f  [ -128384 ]  rep stos                 rep stos:pending                        
  0x405911  [ -128384 ]  call cav:0x402e50        App:0x402e50(arg1:0x412138,arg2:0x412c54)
  0x405916  [ -128384 ]  mov esi, eax             esi = eax (= 0x402e50_rtn_0x405911)     
  0x405918  [ -128384 ]  mov eax, 0x412d54        eax = gv_0x412d54 (= 0)                 
  0x40591d  [ -128384 ]  add esp, 0x14            esp := (esp + 20) (= (esp_in - 0x1f56c))
  0x405920  [ -128364 ]  cmp eax, ebx                                                     
  0x405922  [ -128364 ]  jz cav:0x405934          if true goto 0x405934                   
--------------------------------------------------------------------------------
  0x405924  [ -128364 ]  push 0x64                [0x405926:1: 100]                       
  0x405926  [ -128368 ]  call* 0x407094           Sleep(dwMilliseconds:100) (KERNEL32.dll)
  0x40592c  [ -128364 ]  cmp 0x412d54, ebx                                                
  0x405932  [ -128364 ]  jnz cav:0x405924         if false goto 0x405924                  
--------------------------------------------------------------------------------
  0x405934  [ -128364 ]  cmp esi, ebx                                                     
  0x405936  [ -128364 ]  mov 0x412d54, 0x1        gv_0x412d54 = 1                         
  0x405940  [ -128364 ]  jle cav:0x4066e3         if (0x402e50_rtn_0x405911 <= 0) goto 0x4066e3
--------------------------------------------------------------------------------
  0x405946  [ -128364 ]  mov ebp, 0x412138        ebp = gv_0x412138 (= gv_0x412138_in)    
  0x40594c  [ -128364 ]  mov esi, 0x40908c        esi = 0x40908c: "cls"                   
  0x405951  [ -128364 ]  mov eax, ebp             eax = ebp (= gv_0x412138_in)            
--------------------------------------------------------------------------------
  0x405953  [ -128364 ]  mov dl, (eax)            dl = ?                                  
  0x405955  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405957  [ -128364 ]  cmp dl, (esi)                                                    
  0x405959  [ -128364 ]  jnz cav:0x405977         if (dl <> ??) goto 0x405977             
--------------------------------------------------------------------------------
  0x40595b  [ -128364 ]  cmp cl, bl                                                       
  0x40595d  [ -128364 ]  jz cav:0x405973          if (cl == 0) goto 0x405973              
--------------------------------------------------------------------------------
  0x40595f  [ -128364 ]  mov dl, 0x1(eax)         dl = ?                                  
  0x405962  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405964  [ -128364 ]  cmp dl, 0x1(esi)                                                 
  0x405967  [ -128364 ]  jnz cav:0x405977         if (dl <> ??) goto 0x405977             
--------------------------------------------------------------------------------
  0x405969  [ -128364 ]  add eax, 0x2             eax := (eax + 2)                        
  0x40596c  [ -128364 ]  add esi, 0x2             esi := (esi + 2)                        
  0x40596f  [ -128364 ]  cmp cl, bl                                                       
  0x405971  [ -128364 ]  jnz cav:0x405953         if (cl <> 0) goto 0x405953              
--------------------------------------------------------------------------------
  0x405973  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x405975  [ -128364 ]  jmp cav:0x40597c         goto 0x40597c                           
--------------------------------------------------------------------------------
  0x405977  [ -128364 ]  sbb eax, eax             eax = (eax - eax) (= 0) or ((eax - eax) + 1) (= 1)
  0x405979  [ -128364 ]  sbb eax, -0x1            eax = (eax - -1) or ((eax - -1) + 1) (= (eax + 2))
--------------------------------------------------------------------------------
  0x40597c  [ -128364 ]  cmp eax, ebx                                                     
  0x40597e  [ -128364 ]  jnz cav:0x405993         if (eax <> 0) goto 0x405993             
--------------------------------------------------------------------------------
  0x405980  [ -128364 ]  push 0x40908c            [0x405985:1: 0x40908c: "cls"]           
  0x405985  [ -128368 ]  call* 0x4070ec           system(command:0x40908c: "cls") (MSVCRT.dll)
  0x40598b  [ -128368 ]  add esp, 0x4             esp := (esp + 4) (= (esp_in - 0x1f56c)) 
  0x40598e  [ -128364 ]  jmp cav:0x4066e3         goto 0x4066e3                           
--------------------------------------------------------------------------------
  0x405993  [ -128364 ]  mov esi, 0x409080        esi = 0x409080                          
  0x405998  [ -128364 ]  mov eax, ebp             eax = ebp (= gv_0x412138_in)            
--------------------------------------------------------------------------------
  0x40599a  [ -128364 ]  mov dl, (eax)            dl = ?                                  
  0x40599c  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x40599e  [ -128364 ]  cmp dl, (esi)                                                    
  0x4059a0  [ -128364 ]  jnz cav:0x4059be         if (dl <> ??) goto 0x4059be             
--------------------------------------------------------------------------------
  0x4059a2  [ -128364 ]  cmp cl, bl                                                       
  0x4059a4  [ -128364 ]  jz cav:0x4059ba          if (cl == 0) goto 0x4059ba              
--------------------------------------------------------------------------------
  0x4059a6  [ -128364 ]  mov dl, 0x1(eax)         dl = ?                                  
  0x4059a9  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x4059ab  [ -128364 ]  cmp dl, 0x1(esi)                                                 
  0x4059ae  [ -128364 ]  jnz cav:0x4059be         if (dl <> ??) goto 0x4059be             
--------------------------------------------------------------------------------
  0x4059b0  [ -128364 ]  add eax, 0x2             eax := (eax + 2)                        
  0x4059b3  [ -128364 ]  add esi, 0x2             esi := (esi + 2)                        
  0x4059b6  [ -128364 ]  cmp cl, bl                                                       
  0x4059b8  [ -128364 ]  jnz cav:0x40599a         if (cl <> 0) goto 0x40599a              
--------------------------------------------------------------------------------
  0x4059ba  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x4059bc  [ -128364 ]  jmp cav:0x4059c3         goto 0x4059c3                           
--------------------------------------------------------------------------------
  0x4059be  [ -128364 ]  sbb eax, eax             eax = (eax - eax) (= 0) or ((eax - eax) + 1) (= 1)
  0x4059c0  [ -128364 ]  sbb eax, -0x1            eax = (eax - -1) or ((eax - -1) + 1) (= (eax + 2))
--------------------------------------------------------------------------------
  0x4059c3  [ -128364 ]  cmp eax, ebx                                                     
  0x4059c5  [ -128364 ]  jz cav:0x4066cd          if (eax == 0) goto 0x4066cd             
--------------------------------------------------------------------------------
  0x4059cb  [ -128364 ]  mov esi, 0x40907c        esi = 0x40907c                          
  0x4059d0  [ -128364 ]  mov eax, ebp             eax = ebp (= gv_0x412138_in)            
--------------------------------------------------------------------------------
  0x4059d2  [ -128364 ]  mov dl, (eax)            dl = ?                                  
  0x4059d4  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x4059d6  [ -128364 ]  cmp dl, (esi)                                                    
  0x4059d8  [ -128364 ]  jnz cav:0x4059f6         if (dl <> ??) goto 0x4059f6             
--------------------------------------------------------------------------------
  0x4059da  [ -128364 ]  cmp cl, bl                                                       
  0x4059dc  [ -128364 ]  jz cav:0x4059f2          if (cl == 0) goto 0x4059f2              
--------------------------------------------------------------------------------
  0x4059de  [ -128364 ]  mov dl, 0x1(eax)         dl = ?                                  
  0x4059e1  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x4059e3  [ -128364 ]  cmp dl, 0x1(esi)                                                 
  0x4059e6  [ -128364 ]  jnz cav:0x4059f6         if (dl <> ??) goto 0x4059f6             
--------------------------------------------------------------------------------
  0x4059e8  [ -128364 ]  add eax, 0x2             eax := (eax + 2)                        
  0x4059eb  [ -128364 ]  add esi, 0x2             esi := (esi + 2)                        
  0x4059ee  [ -128364 ]  cmp cl, bl                                                       
  0x4059f0  [ -128364 ]  jnz cav:0x4059d2         if (cl <> 0) goto 0x4059d2              
--------------------------------------------------------------------------------
  0x4059f2  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x4059f4  [ -128364 ]  jmp cav:0x4059fb         goto 0x4059fb                           
--------------------------------------------------------------------------------
  0x4059f6  [ -128364 ]  sbb eax, eax             eax = (eax - eax) (= 0) or ((eax - eax) + 1) (= 1)
  0x4059f8  [ -128364 ]  sbb eax, -0x1            eax = (eax - -1) or ((eax - -1) + 1) (= (eax + 2))
--------------------------------------------------------------------------------
  0x4059fb  [ -128364 ]  cmp eax, ebx                                                     
  0x4059fd  [ -128364 ]  jz cav:0x4066cd          if (eax == 0) goto 0x4066cd             
--------------------------------------------------------------------------------
  0x405a03  [ -128364 ]  mov esi, 0x40906c        esi = 0x40906c                          
  0x405a08  [ -128364 ]  mov eax, ebp             eax = ebp (= gv_0x412138_in)            
--------------------------------------------------------------------------------
  0x405a0a  [ -128364 ]  mov dl, (eax)            dl = ?                                  
  0x405a0c  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405a0e  [ -128364 ]  cmp dl, (esi)                                                    
  0x405a10  [ -128364 ]  jnz cav:0x405a2e         if (dl <> ??) goto 0x405a2e             
--------------------------------------------------------------------------------
  0x405a12  [ -128364 ]  cmp cl, bl                                                       
  0x405a14  [ -128364 ]  jz cav:0x405a2a          if (cl == 0) goto 0x405a2a              
--------------------------------------------------------------------------------
  0x405a16  [ -128364 ]  mov dl, 0x1(eax)         dl = ?                                  
  0x405a19  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405a1b  [ -128364 ]  cmp dl, 0x1(esi)                                                 
  0x405a1e  [ -128364 ]  jnz cav:0x405a2e         if (dl <> ??) goto 0x405a2e             
--------------------------------------------------------------------------------
  0x405a20  [ -128364 ]  add eax, 0x2             eax := (eax + 2)                        
  0x405a23  [ -128364 ]  add esi, 0x2             esi := (esi + 2)                        
  0x405a26  [ -128364 ]  cmp cl, bl                                                       
  0x405a28  [ -128364 ]  jnz cav:0x405a0a         if (cl <> 0) goto 0x405a0a              
--------------------------------------------------------------------------------
  0x405a2a  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x405a2c  [ -128364 ]  jmp cav:0x405a33         goto 0x405a33                           
--------------------------------------------------------------------------------
  0x405a2e  [ -128364 ]  sbb eax, eax             eax = (eax - eax) (= 0) or ((eax - eax) + 1) (= 1)
  0x405a30  [ -128364 ]  sbb eax, -0x1            eax = (eax - -1) or ((eax - -1) + 1) (= (eax + 2))
--------------------------------------------------------------------------------
  0x405a33  [ -128364 ]  cmp eax, ebx                                                     
  0x405a35  [ -128364 ]  jz cav:0x4066b8          if (eax == 0) goto 0x4066b8             
--------------------------------------------------------------------------------
  0x405a3b  [ -128364 ]  mov esi, 0x409068        esi = 0x409068                          
  0x405a40  [ -128364 ]  mov eax, ebp             eax = ebp (= gv_0x412138_in)            
--------------------------------------------------------------------------------
  0x405a42  [ -128364 ]  mov dl, (eax)            dl = ?                                  
  0x405a44  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405a46  [ -128364 ]  cmp dl, (esi)                                                    
  0x405a48  [ -128364 ]  jnz cav:0x405a66         if (dl <> ??) goto 0x405a66             
--------------------------------------------------------------------------------
  0x405a4a  [ -128364 ]  cmp cl, bl                                                       
  0x405a4c  [ -128364 ]  jz cav:0x405a62          if (cl == 0) goto 0x405a62              
--------------------------------------------------------------------------------
  0x405a4e  [ -128364 ]  mov dl, 0x1(eax)         dl = ?                                  
  0x405a51  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405a53  [ -128364 ]  cmp dl, 0x1(esi)                                                 
  0x405a56  [ -128364 ]  jnz cav:0x405a66         if (dl <> ??) goto 0x405a66             
--------------------------------------------------------------------------------
  0x405a58  [ -128364 ]  add eax, 0x2             eax := (eax + 2)                        
  0x405a5b  [ -128364 ]  add esi, 0x2             esi := (esi + 2)                        
  0x405a5e  [ -128364 ]  cmp cl, bl                                                       
  0x405a60  [ -128364 ]  jnz cav:0x405a42         if (cl <> 0) goto 0x405a42              
--------------------------------------------------------------------------------
  0x405a62  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x405a64  [ -128364 ]  jmp cav:0x405a6b         goto 0x405a6b                           
--------------------------------------------------------------------------------
  0x405a66  [ -128364 ]  sbb eax, eax             eax = (eax - eax) (= 0) or ((eax - eax) + 1) (= 1)
  0x405a68  [ -128364 ]  sbb eax, -0x1            eax = (eax - -1) or ((eax - -1) + 1) (= (eax + 2))
--------------------------------------------------------------------------------
  0x405a6b  [ -128364 ]  cmp eax, ebx                                                     
  0x405a6d  [ -128364 ]  jz cav:0x4066b8          if (eax == 0) goto 0x4066b8             
--------------------------------------------------------------------------------
  0x405a73  [ -128364 ]  mov esi, 0x40905c        esi = 0x40905c                          
  0x405a78  [ -128364 ]  mov eax, ebp             eax = ebp (= gv_0x412138_in)            
--------------------------------------------------------------------------------
  0x405a7a  [ -128364 ]  mov dl, (eax)            dl = ?                                  
  0x405a7c  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405a7e  [ -128364 ]  cmp dl, (esi)                                                    
  0x405a80  [ -128364 ]  jnz cav:0x405a9e         if (dl <> ??) goto 0x405a9e             
--------------------------------------------------------------------------------
  0x405a82  [ -128364 ]  cmp cl, bl                                                       
  0x405a84  [ -128364 ]  jz cav:0x405a9a          if (cl == 0) goto 0x405a9a              
--------------------------------------------------------------------------------
  0x405a86  [ -128364 ]  mov dl, 0x1(eax)         dl = ?                                  
  0x405a89  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405a8b  [ -128364 ]  cmp dl, 0x1(esi)                                                 
  0x405a8e  [ -128364 ]  jnz cav:0x405a9e         if (dl <> ??) goto 0x405a9e             
--------------------------------------------------------------------------------
  0x405a90  [ -128364 ]  add eax, 0x2             eax := (eax + 2)                        
  0x405a93  [ -128364 ]  add esi, 0x2             esi := (esi + 2)                        
  0x405a96  [ -128364 ]  cmp cl, bl                                                       
  0x405a98  [ -128364 ]  jnz cav:0x405a7a         if (cl <> 0) goto 0x405a7a              
--------------------------------------------------------------------------------
  0x405a9a  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x405a9c  [ -128364 ]  jmp cav:0x405aa3         goto 0x405aa3                           
--------------------------------------------------------------------------------
  0x405a9e  [ -128364 ]  sbb eax, eax             eax = (eax - eax) (= 0) or ((eax - eax) + 1) (= 1)
  0x405aa0  [ -128364 ]  sbb eax, -0x1            eax = (eax - -1) or ((eax - -1) + 1) (= (eax + 2))
--------------------------------------------------------------------------------
  0x405aa3  [ -128364 ]  cmp eax, ebx                                                     
  0x405aa5  [ -128364 ]  jz cav:0x4066a1          if (eax == 0) goto 0x4066a1             
--------------------------------------------------------------------------------
  0x405aab  [ -128364 ]  mov esi, 0x409058        esi = 0x409058                          
  0x405ab0  [ -128364 ]  mov eax, ebp             eax = ebp (= gv_0x412138_in)            
--------------------------------------------------------------------------------
  0x405ab2  [ -128364 ]  mov dl, (eax)            dl = ?                                  
  0x405ab4  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405ab6  [ -128364 ]  cmp dl, (esi)                                                    
  0x405ab8  [ -128364 ]  jnz cav:0x405ad6         if (dl <> ??) goto 0x405ad6             
--------------------------------------------------------------------------------
  0x405aba  [ -128364 ]  cmp cl, bl                                                       
  0x405abc  [ -128364 ]  jz cav:0x405ad2          if (cl == 0) goto 0x405ad2              
--------------------------------------------------------------------------------
  0x405abe  [ -128364 ]  mov dl, 0x1(eax)         dl = ?                                  
  0x405ac1  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405ac3  [ -128364 ]  cmp dl, 0x1(esi)                                                 
  0x405ac6  [ -128364 ]  jnz cav:0x405ad6         if (dl <> ??) goto 0x405ad6             
--------------------------------------------------------------------------------
  0x405ac8  [ -128364 ]  add eax, 0x2             eax := (eax + 2)                        
  0x405acb  [ -128364 ]  add esi, 0x2             esi := (esi + 2)                        
  0x405ace  [ -128364 ]  cmp cl, bl                                                       
  0x405ad0  [ -128364 ]  jnz cav:0x405ab2         if (cl <> 0) goto 0x405ab2              
--------------------------------------------------------------------------------
  0x405ad2  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x405ad4  [ -128364 ]  jmp cav:0x405adb         goto 0x405adb                           
--------------------------------------------------------------------------------
  0x405ad6  [ -128364 ]  sbb eax, eax             eax = (eax - eax) (= 0) or ((eax - eax) + 1) (= 1)
  0x405ad8  [ -128364 ]  sbb eax, -0x1            eax = (eax - -1) or ((eax - -1) + 1) (= (eax + 2))
--------------------------------------------------------------------------------
  0x405adb  [ -128364 ]  cmp eax, ebx                                                     
  0x405add  [ -128364 ]  jz cav:0x4066a1          if (eax == 0) goto 0x4066a1             
--------------------------------------------------------------------------------
  0x405ae3  [ -128364 ]  mov esi, 0x40904c        esi = 0x40904c                          
  0x405ae8  [ -128364 ]  mov eax, ebp             eax = ebp (= gv_0x412138_in)            
--------------------------------------------------------------------------------
  0x405aea  [ -128364 ]  mov dl, (eax)            dl = ?                                  
  0x405aec  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405aee  [ -128364 ]  cmp dl, (esi)                                                    
  0x405af0  [ -128364 ]  jnz cav:0x405b0e         if (dl <> ??) goto 0x405b0e             
--------------------------------------------------------------------------------
  0x405af2  [ -128364 ]  cmp cl, bl                                                       
  0x405af4  [ -128364 ]  jz cav:0x405b0a          if (cl == 0) goto 0x405b0a              
--------------------------------------------------------------------------------
  0x405af6  [ -128364 ]  mov dl, 0x1(eax)         dl = ?                                  
  0x405af9  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405afb  [ -128364 ]  cmp dl, 0x1(esi)                                                 
  0x405afe  [ -128364 ]  jnz cav:0x405b0e         if (dl <> ??) goto 0x405b0e             
--------------------------------------------------------------------------------
  0x405b00  [ -128364 ]  add eax, 0x2             eax := (eax + 2)                        
  0x405b03  [ -128364 ]  add esi, 0x2             esi := (esi + 2)                        
  0x405b06  [ -128364 ]  cmp cl, bl                                                       
  0x405b08  [ -128364 ]  jnz cav:0x405aea         if (cl <> 0) goto 0x405aea              
--------------------------------------------------------------------------------
  0x405b0a  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x405b0c  [ -128364 ]  jmp cav:0x405b13         goto 0x405b13                           
--------------------------------------------------------------------------------
  0x405b0e  [ -128364 ]  sbb eax, eax             eax = (eax - eax) (= 0) or ((eax - eax) + 1) (= 1)
  0x405b10  [ -128364 ]  sbb eax, -0x1            eax = (eax - -1) or ((eax - -1) + 1) (= (eax + 2))
--------------------------------------------------------------------------------
  0x405b13  [ -128364 ]  cmp eax, ebx                                                     
  0x405b15  [ -128364 ]  jz cav:0x406681          if (eax == 0) goto 0x406681             
--------------------------------------------------------------------------------
  0x405b1b  [ -128364 ]  mov esi, 0x409044        esi = 0x409044                          
  0x405b20  [ -128364 ]  mov eax, ebp             eax = ebp (= gv_0x412138_in)            
--------------------------------------------------------------------------------
  0x405b22  [ -128364 ]  mov dl, (eax)            dl = ?                                  
  0x405b24  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405b26  [ -128364 ]  cmp dl, (esi)                                                    
  0x405b28  [ -128364 ]  jnz cav:0x405b46         if (dl <> ??) goto 0x405b46             
--------------------------------------------------------------------------------
  0x405b2a  [ -128364 ]  cmp cl, bl                                                       
  0x405b2c  [ -128364 ]  jz cav:0x405b42          if (cl == 0) goto 0x405b42              
--------------------------------------------------------------------------------
  0x405b2e  [ -128364 ]  mov dl, 0x1(eax)         dl = ?                                  
  0x405b31  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405b33  [ -128364 ]  cmp dl, 0x1(esi)                                                 
  0x405b36  [ -128364 ]  jnz cav:0x405b46         if (dl <> ??) goto 0x405b46             
--------------------------------------------------------------------------------
  0x405b38  [ -128364 ]  add eax, 0x2             eax := (eax + 2)                        
  0x405b3b  [ -128364 ]  add esi, 0x2             esi := (esi + 2)                        
  0x405b3e  [ -128364 ]  cmp cl, bl                                                       
  0x405b40  [ -128364 ]  jnz cav:0x405b22         if (cl <> 0) goto 0x405b22              
--------------------------------------------------------------------------------
  0x405b42  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x405b44  [ -128364 ]  jmp cav:0x405b4b         goto 0x405b4b                           
--------------------------------------------------------------------------------
  0x405b46  [ -128364 ]  sbb eax, eax             eax = (eax - eax) (= 0) or ((eax - eax) + 1) (= 1)
  0x405b48  [ -128364 ]  sbb eax, -0x1            eax = (eax - -1) or ((eax - -1) + 1) (= (eax + 2))
--------------------------------------------------------------------------------
  0x405b4b  [ -128364 ]  cmp eax, ebx                                                     
  0x405b4d  [ -128364 ]  jz cav:0x406681          if (eax == 0) goto 0x406681             
--------------------------------------------------------------------------------
  0x405b53  [ -128364 ]  mov esi, 0x409038        esi = 0x409038                          
  0x405b58  [ -128364 ]  mov eax, ebp             eax = ebp (= gv_0x412138_in)            
--------------------------------------------------------------------------------
  0x405b5a  [ -128364 ]  mov dl, (eax)            dl = ?                                  
  0x405b5c  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405b5e  [ -128364 ]  cmp dl, (esi)                                                    
  0x405b60  [ -128364 ]  jnz cav:0x405b7e         if (dl <> ??) goto 0x405b7e             
--------------------------------------------------------------------------------
  0x405b62  [ -128364 ]  cmp cl, bl                                                       
  0x405b64  [ -128364 ]  jz cav:0x405b7a          if (cl == 0) goto 0x405b7a              
--------------------------------------------------------------------------------
  0x405b66  [ -128364 ]  mov dl, 0x1(eax)         dl = ?                                  
  0x405b69  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405b6b  [ -128364 ]  cmp dl, 0x1(esi)                                                 
  0x405b6e  [ -128364 ]  jnz cav:0x405b7e         if (dl <> ??) goto 0x405b7e             
--------------------------------------------------------------------------------
  0x405b70  [ -128364 ]  add eax, 0x2             eax := (eax + 2)                        
  0x405b73  [ -128364 ]  add esi, 0x2             esi := (esi + 2)                        
  0x405b76  [ -128364 ]  cmp cl, bl                                                       
  0x405b78  [ -128364 ]  jnz cav:0x405b5a         if (cl <> 0) goto 0x405b5a              
--------------------------------------------------------------------------------
  0x405b7a  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x405b7c  [ -128364 ]  jmp cav:0x405b83         goto 0x405b83                           
--------------------------------------------------------------------------------
  0x405b7e  [ -128364 ]  sbb eax, eax             eax = (eax - eax) (= 0) or ((eax - eax) + 1) (= 1)
  0x405b80  [ -128364 ]  sbb eax, -0x1            eax = (eax - -1) or ((eax - -1) + 1) (= (eax + 2))
--------------------------------------------------------------------------------
  0x405b83  [ -128364 ]  cmp eax, ebx                                                     
  0x405b85  [ -128364 ]  jz cav:0x406661          if (eax == 0) goto 0x406661             
--------------------------------------------------------------------------------
  0x405b8b  [ -128364 ]  mov esi, 0x409030        esi = 0x409030                          
  0x405b90  [ -128364 ]  mov eax, ebp             eax = ebp (= gv_0x412138_in)            
--------------------------------------------------------------------------------
  0x405b92  [ -128364 ]  mov dl, (eax)            dl = ?                                  
  0x405b94  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405b96  [ -128364 ]  cmp dl, (esi)                                                    
  0x405b98  [ -128364 ]  jnz cav:0x405bb6         if (dl <> ??) goto 0x405bb6             
--------------------------------------------------------------------------------
  0x405b9a  [ -128364 ]  cmp cl, bl                                                       
  0x405b9c  [ -128364 ]  jz cav:0x405bb2          if (cl == 0) goto 0x405bb2              
--------------------------------------------------------------------------------
  0x405b9e  [ -128364 ]  mov dl, 0x1(eax)         dl = ?                                  
  0x405ba1  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405ba3  [ -128364 ]  cmp dl, 0x1(esi)                                                 
  0x405ba6  [ -128364 ]  jnz cav:0x405bb6         if (dl <> ??) goto 0x405bb6             
--------------------------------------------------------------------------------
  0x405ba8  [ -128364 ]  add eax, 0x2             eax := (eax + 2)                        
  0x405bab  [ -128364 ]  add esi, 0x2             esi := (esi + 2)                        
  0x405bae  [ -128364 ]  cmp cl, bl                                                       
  0x405bb0  [ -128364 ]  jnz cav:0x405b92         if (cl <> 0) goto 0x405b92              
--------------------------------------------------------------------------------
  0x405bb2  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x405bb4  [ -128364 ]  jmp cav:0x405bbb         goto 0x405bbb                           
--------------------------------------------------------------------------------
  0x405bb6  [ -128364 ]  sbb eax, eax             eax = (eax - eax) (= 0) or ((eax - eax) + 1) (= 1)
  0x405bb8  [ -128364 ]  sbb eax, -0x1            eax = (eax - -1) or ((eax - -1) + 1) (= (eax + 2))
--------------------------------------------------------------------------------
  0x405bbb  [ -128364 ]  cmp eax, ebx                                                     
  0x405bbd  [ -128364 ]  jz cav:0x406661          if (eax == 0) goto 0x406661             
--------------------------------------------------------------------------------
  0x405bc3  [ -128364 ]  mov esi, 0x409028        esi = 0x409028                          
  0x405bc8  [ -128364 ]  mov eax, ebp             eax = ebp (= gv_0x412138_in)            
--------------------------------------------------------------------------------
  0x405bca  [ -128364 ]  mov dl, (eax)            dl = ?                                  
  0x405bcc  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405bce  [ -128364 ]  cmp dl, (esi)                                                    
  0x405bd0  [ -128364 ]  jnz cav:0x405bee         if (dl <> ??) goto 0x405bee             
--------------------------------------------------------------------------------
  0x405bd2  [ -128364 ]  cmp cl, bl                                                       
  0x405bd4  [ -128364 ]  jz cav:0x405bea          if (cl == 0) goto 0x405bea              
--------------------------------------------------------------------------------
  0x405bd6  [ -128364 ]  mov dl, 0x1(eax)         dl = ?                                  
  0x405bd9  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405bdb  [ -128364 ]  cmp dl, 0x1(esi)                                                 
  0x405bde  [ -128364 ]  jnz cav:0x405bee         if (dl <> ??) goto 0x405bee             
--------------------------------------------------------------------------------
  0x405be0  [ -128364 ]  add eax, 0x2             eax := (eax + 2)                        
  0x405be3  [ -128364 ]  add esi, 0x2             esi := (esi + 2)                        
  0x405be6  [ -128364 ]  cmp cl, bl                                                       
  0x405be8  [ -128364 ]  jnz cav:0x405bca         if (cl <> 0) goto 0x405bca              
--------------------------------------------------------------------------------
  0x405bea  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x405bec  [ -128364 ]  jmp cav:0x405bf3         goto 0x405bf3                           
--------------------------------------------------------------------------------
  0x405bee  [ -128364 ]  sbb eax, eax             eax = (eax - eax) (= 0) or ((eax - eax) + 1) (= 1)
  0x405bf0  [ -128364 ]  sbb eax, -0x1            eax = (eax - -1) or ((eax - -1) + 1) (= (eax + 2))
--------------------------------------------------------------------------------
  0x405bf3  [ -128364 ]  cmp eax, ebx                                                     
  0x405bf5  [ -128364 ]  jz cav:0x40663e          if (eax == 0) goto 0x40663e             
--------------------------------------------------------------------------------
  0x405bfb  [ -128364 ]  mov esi, 0x409020        esi = 0x409020                          
  0x405c00  [ -128364 ]  mov eax, ebp             eax = ebp (= gv_0x412138_in)            
--------------------------------------------------------------------------------
  0x405c02  [ -128364 ]  mov dl, (eax)            dl = ?                                  
  0x405c04  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405c06  [ -128364 ]  cmp dl, (esi)                                                    
  0x405c08  [ -128364 ]  jnz cav:0x405c26         if (dl <> ??) goto 0x405c26             
--------------------------------------------------------------------------------
  0x405c0a  [ -128364 ]  cmp cl, bl                                                       
  0x405c0c  [ -128364 ]  jz cav:0x405c22          if (cl == 0) goto 0x405c22              
--------------------------------------------------------------------------------
  0x405c0e  [ -128364 ]  mov dl, 0x1(eax)         dl = ?                                  
  0x405c11  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405c13  [ -128364 ]  cmp dl, 0x1(esi)                                                 
  0x405c16  [ -128364 ]  jnz cav:0x405c26         if (dl <> ??) goto 0x405c26             
--------------------------------------------------------------------------------
  0x405c18  [ -128364 ]  add eax, 0x2             eax := (eax + 2)                        
  0x405c1b  [ -128364 ]  add esi, 0x2             esi := (esi + 2)                        
  0x405c1e  [ -128364 ]  cmp cl, bl                                                       
  0x405c20  [ -128364 ]  jnz cav:0x405c02         if (cl <> 0) goto 0x405c02              
--------------------------------------------------------------------------------
  0x405c22  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x405c24  [ -128364 ]  jmp cav:0x405c2b         goto 0x405c2b                           
--------------------------------------------------------------------------------
  0x405c26  [ -128364 ]  sbb eax, eax             eax = (eax - eax) (= 0) or ((eax - eax) + 1) (= 1)
  0x405c28  [ -128364 ]  sbb eax, -0x1            eax = (eax - -1) or ((eax - -1) + 1) (= (eax + 2))
--------------------------------------------------------------------------------
  0x405c2b  [ -128364 ]  cmp eax, ebx                                                     
  0x405c2d  [ -128364 ]  jz cav:0x40663e          if (eax == 0) goto 0x40663e             
--------------------------------------------------------------------------------
  0x405c33  [ -128364 ]  mov esi, 0x409014        esi = 0x409014                          
  0x405c38  [ -128364 ]  mov eax, ebp             eax = ebp (= gv_0x412138_in)            
--------------------------------------------------------------------------------
  0x405c3a  [ -128364 ]  mov dl, (eax)            dl = ?                                  
  0x405c3c  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405c3e  [ -128364 ]  cmp dl, (esi)                                                    
  0x405c40  [ -128364 ]  jnz cav:0x405c5e         if (dl <> ??) goto 0x405c5e             
--------------------------------------------------------------------------------
  0x405c42  [ -128364 ]  cmp cl, bl                                                       
  0x405c44  [ -128364 ]  jz cav:0x405c5a          if (cl == 0) goto 0x405c5a              
--------------------------------------------------------------------------------
  0x405c46  [ -128364 ]  mov dl, 0x1(eax)         dl = ?                                  
  0x405c49  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405c4b  [ -128364 ]  cmp dl, 0x1(esi)                                                 
  0x405c4e  [ -128364 ]  jnz cav:0x405c5e         if (dl <> ??) goto 0x405c5e             
--------------------------------------------------------------------------------
  0x405c50  [ -128364 ]  add eax, 0x2             eax := (eax + 2)                        
  0x405c53  [ -128364 ]  add esi, 0x2             esi := (esi + 2)                        
  0x405c56  [ -128364 ]  cmp cl, bl                                                       
  0x405c58  [ -128364 ]  jnz cav:0x405c3a         if (cl <> 0) goto 0x405c3a              
--------------------------------------------------------------------------------
  0x405c5a  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x405c5c  [ -128364 ]  jmp cav:0x405c63         goto 0x405c63                           
--------------------------------------------------------------------------------
  0x405c5e  [ -128364 ]  sbb eax, eax             eax = (eax - eax) (= 0) or ((eax - eax) + 1) (= 1)
  0x405c60  [ -128364 ]  sbb eax, -0x1            eax = (eax - -1) or ((eax - -1) + 1) (= (eax + 2))
--------------------------------------------------------------------------------
  0x405c63  [ -128364 ]  cmp eax, ebx                                                     
  0x405c65  [ -128364 ]  jz cav:0x40661b          if (eax == 0) goto 0x40661b             
--------------------------------------------------------------------------------
  0x405c6b  [ -128364 ]  mov esi, 0x40900c        esi = 0x40900c                          
  0x405c70  [ -128364 ]  mov eax, ebp             eax = ebp (= gv_0x412138_in)            
--------------------------------------------------------------------------------
  0x405c72  [ -128364 ]  mov dl, (eax)            dl = ?                                  
  0x405c74  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405c76  [ -128364 ]  cmp dl, (esi)                                                    
  0x405c78  [ -128364 ]  jnz cav:0x405c96         if (dl <> ??) goto 0x405c96             
--------------------------------------------------------------------------------
  0x405c7a  [ -128364 ]  cmp cl, bl                                                       
  0x405c7c  [ -128364 ]  jz cav:0x405c92          if (cl == 0) goto 0x405c92              
--------------------------------------------------------------------------------
  0x405c7e  [ -128364 ]  mov dl, 0x1(eax)         dl = ?                                  
  0x405c81  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405c83  [ -128364 ]  cmp dl, 0x1(esi)                                                 
  0x405c86  [ -128364 ]  jnz cav:0x405c96         if (dl <> ??) goto 0x405c96             
--------------------------------------------------------------------------------
  0x405c88  [ -128364 ]  add eax, 0x2             eax := (eax + 2)                        
  0x405c8b  [ -128364 ]  add esi, 0x2             esi := (esi + 2)                        
  0x405c8e  [ -128364 ]  cmp cl, bl                                                       
  0x405c90  [ -128364 ]  jnz cav:0x405c72         if (cl <> 0) goto 0x405c72              
--------------------------------------------------------------------------------
  0x405c92  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x405c94  [ -128364 ]  jmp cav:0x405c9b         goto 0x405c9b                           
--------------------------------------------------------------------------------
  0x405c96  [ -128364 ]  sbb eax, eax             eax = (eax - eax) (= 0) or ((eax - eax) + 1) (= 1)
  0x405c98  [ -128364 ]  sbb eax, -0x1            eax = (eax - -1) or ((eax - -1) + 1) (= (eax + 2))
--------------------------------------------------------------------------------
  0x405c9b  [ -128364 ]  cmp eax, ebx                                                     
  0x405c9d  [ -128364 ]  jz cav:0x40661b          if (eax == 0) goto 0x40661b             
--------------------------------------------------------------------------------
  0x405ca3  [ -128364 ]  mov esi, 0x409000        esi = 0x409000                          
  0x405ca8  [ -128364 ]  mov eax, ebp             eax = ebp (= gv_0x412138_in)            
--------------------------------------------------------------------------------
  0x405caa  [ -128364 ]  mov dl, (eax)            dl = ?                                  
  0x405cac  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405cae  [ -128364 ]  cmp dl, (esi)                                                    
  0x405cb0  [ -128364 ]  jnz cav:0x405cce         if (dl <> ??) goto 0x405cce             
--------------------------------------------------------------------------------
  0x405cb2  [ -128364 ]  cmp cl, bl                                                       
  0x405cb4  [ -128364 ]  jz cav:0x405cca          if (cl == 0) goto 0x405cca              
--------------------------------------------------------------------------------
  0x405cb6  [ -128364 ]  mov dl, 0x1(eax)         dl = ?                                  
  0x405cb9  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405cbb  [ -128364 ]  cmp dl, 0x1(esi)                                                 
  0x405cbe  [ -128364 ]  jnz cav:0x405cce         if (dl <> ??) goto 0x405cce             
--------------------------------------------------------------------------------
  0x405cc0  [ -128364 ]  add eax, 0x2             eax := (eax + 2)                        
  0x405cc3  [ -128364 ]  add esi, 0x2             esi := (esi + 2)                        
  0x405cc6  [ -128364 ]  cmp cl, bl                                                       
  0x405cc8  [ -128364 ]  jnz cav:0x405caa         if (cl <> 0) goto 0x405caa              
--------------------------------------------------------------------------------
  0x405cca  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x405ccc  [ -128364 ]  jmp cav:0x405cd3         goto 0x405cd3                           
--------------------------------------------------------------------------------
  0x405cce  [ -128364 ]  sbb eax, eax             eax = (eax - eax) (= 0) or ((eax - eax) + 1) (= 1)
  0x405cd0  [ -128364 ]  sbb eax, -0x1            eax = (eax - -1) or ((eax - -1) + 1) (= (eax + 2))
--------------------------------------------------------------------------------
  0x405cd3  [ -128364 ]  cmp eax, ebx                                                     
  0x405cd5  [ -128364 ]  jz cav:0x4065fe          if (eax == 0) goto 0x4065fe             
--------------------------------------------------------------------------------
  0x405cdb  [ -128364 ]  mov esi, 0x408ff8        esi = 0x408ff8                          
  0x405ce0  [ -128364 ]  mov eax, ebp             eax = ebp (= gv_0x412138_in)            
--------------------------------------------------------------------------------
  0x405ce2  [ -128364 ]  mov dl, (eax)            dl = ?                                  
  0x405ce4  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405ce6  [ -128364 ]  cmp dl, (esi)                                                    
  0x405ce8  [ -128364 ]  jnz cav:0x405d06         if (dl <> ??) goto 0x405d06             
--------------------------------------------------------------------------------
  0x405cea  [ -128364 ]  cmp cl, bl                                                       
  0x405cec  [ -128364 ]  jz cav:0x405d02          if (cl == 0) goto 0x405d02              
--------------------------------------------------------------------------------
  0x405cee  [ -128364 ]  mov dl, 0x1(eax)         dl = ?                                  
  0x405cf1  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405cf3  [ -128364 ]  cmp dl, 0x1(esi)                                                 
  0x405cf6  [ -128364 ]  jnz cav:0x405d06         if (dl <> ??) goto 0x405d06             
--------------------------------------------------------------------------------
  0x405cf8  [ -128364 ]  add eax, 0x2             eax := (eax + 2)                        
  0x405cfb  [ -128364 ]  add esi, 0x2             esi := (esi + 2)                        
  0x405cfe  [ -128364 ]  cmp cl, bl                                                       
  0x405d00  [ -128364 ]  jnz cav:0x405ce2         if (cl <> 0) goto 0x405ce2              
--------------------------------------------------------------------------------
  0x405d02  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x405d04  [ -128364 ]  jmp cav:0x405d0b         goto 0x405d0b                           
--------------------------------------------------------------------------------
  0x405d06  [ -128364 ]  sbb eax, eax             eax = (eax - eax) (= 0) or ((eax - eax) + 1) (= 1)
  0x405d08  [ -128364 ]  sbb eax, -0x1            eax = (eax - -1) or ((eax - -1) + 1) (= (eax + 2))
--------------------------------------------------------------------------------
  0x405d0b  [ -128364 ]  cmp eax, ebx                                                     
  0x405d0d  [ -128364 ]  jz cav:0x4065fe          if (eax == 0) goto 0x4065fe             
--------------------------------------------------------------------------------
  0x405d13  [ -128364 ]  mov esi, 0x408fe8        esi = 0x408fe8                          
  0x405d18  [ -128364 ]  mov eax, ebp             eax = ebp (= gv_0x412138_in)            
--------------------------------------------------------------------------------
  0x405d1a  [ -128364 ]  mov dl, (eax)            dl = ?                                  
  0x405d1c  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405d1e  [ -128364 ]  cmp dl, (esi)                                                    
  0x405d20  [ -128364 ]  jnz cav:0x405d3e         if (dl <> ??) goto 0x405d3e             
--------------------------------------------------------------------------------
  0x405d22  [ -128364 ]  cmp cl, bl                                                       
  0x405d24  [ -128364 ]  jz cav:0x405d3a          if (cl == 0) goto 0x405d3a              
--------------------------------------------------------------------------------
  0x405d26  [ -128364 ]  mov dl, 0x1(eax)         dl = ?                                  
  0x405d29  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405d2b  [ -128364 ]  cmp dl, 0x1(esi)                                                 
  0x405d2e  [ -128364 ]  jnz cav:0x405d3e         if (dl <> ??) goto 0x405d3e             
--------------------------------------------------------------------------------
  0x405d30  [ -128364 ]  add eax, 0x2             eax := (eax + 2)                        
  0x405d33  [ -128364 ]  add esi, 0x2             esi := (esi + 2)                        
  0x405d36  [ -128364 ]  cmp cl, bl                                                       
  0x405d38  [ -128364 ]  jnz cav:0x405d1a         if (cl <> 0) goto 0x405d1a              
--------------------------------------------------------------------------------
  0x405d3a  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x405d3c  [ -128364 ]  jmp cav:0x405d43         goto 0x405d43                           
--------------------------------------------------------------------------------
  0x405d3e  [ -128364 ]  sbb eax, eax             eax = (eax - eax) (= 0) or ((eax - eax) + 1) (= 1)
  0x405d40  [ -128364 ]  sbb eax, -0x1            eax = (eax - -1) or ((eax - -1) + 1) (= (eax + 2))
--------------------------------------------------------------------------------
  0x405d43  [ -128364 ]  cmp eax, ebx                                                     
  0x405d45  [ -128364 ]  jz cav:0x4065dc          if (eax == 0) goto 0x4065dc             
--------------------------------------------------------------------------------
  0x405d4b  [ -128364 ]  mov esi, 0x408fe0        esi = 0x408fe0                          
  0x405d50  [ -128364 ]  mov eax, ebp             eax = ebp (= gv_0x412138_in)            
--------------------------------------------------------------------------------
  0x405d52  [ -128364 ]  mov dl, (eax)            dl = ?                                  
  0x405d54  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405d56  [ -128364 ]  cmp dl, (esi)                                                    
  0x405d58  [ -128364 ]  jnz cav:0x405d76         if (dl <> ??) goto 0x405d76             
--------------------------------------------------------------------------------
  0x405d5a  [ -128364 ]  cmp cl, bl                                                       
  0x405d5c  [ -128364 ]  jz cav:0x405d72          if (cl == 0) goto 0x405d72              
--------------------------------------------------------------------------------
  0x405d5e  [ -128364 ]  mov dl, 0x1(eax)         dl = ?                                  
  0x405d61  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405d63  [ -128364 ]  cmp dl, 0x1(esi)                                                 
  0x405d66  [ -128364 ]  jnz cav:0x405d76         if (dl <> ??) goto 0x405d76             
--------------------------------------------------------------------------------
  0x405d68  [ -128364 ]  add eax, 0x2             eax := (eax + 2)                        
  0x405d6b  [ -128364 ]  add esi, 0x2             esi := (esi + 2)                        
  0x405d6e  [ -128364 ]  cmp cl, bl                                                       
  0x405d70  [ -128364 ]  jnz cav:0x405d52         if (cl <> 0) goto 0x405d52              
--------------------------------------------------------------------------------
  0x405d72  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x405d74  [ -128364 ]  jmp cav:0x405d7b         goto 0x405d7b                           
--------------------------------------------------------------------------------
  0x405d76  [ -128364 ]  sbb eax, eax             eax = (eax - eax) (= 0) or ((eax - eax) + 1) (= 1)
  0x405d78  [ -128364 ]  sbb eax, -0x1            eax = (eax - -1) or ((eax - -1) + 1) (= (eax + 2))
--------------------------------------------------------------------------------
  0x405d7b  [ -128364 ]  cmp eax, ebx                                                     
  0x405d7d  [ -128364 ]  jz cav:0x4065dc          if (eax == 0) goto 0x4065dc             
--------------------------------------------------------------------------------
  0x405d83  [ -128364 ]  mov esi, 0x408fd8        esi = 0x408fd8                          
  0x405d88  [ -128364 ]  mov eax, ebp             eax = ebp (= gv_0x412138_in)            
--------------------------------------------------------------------------------
  0x405d8a  [ -128364 ]  mov dl, (eax)            dl = ?                                  
  0x405d8c  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405d8e  [ -128364 ]  cmp dl, (esi)                                                    
  0x405d90  [ -128364 ]  jnz cav:0x405dae         if (dl <> ??) goto 0x405dae             
--------------------------------------------------------------------------------
  0x405d92  [ -128364 ]  cmp cl, bl                                                       
  0x405d94  [ -128364 ]  jz cav:0x405daa          if (cl == 0) goto 0x405daa              
--------------------------------------------------------------------------------
  0x405d96  [ -128364 ]  mov dl, 0x1(eax)         dl = ?                                  
  0x405d99  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405d9b  [ -128364 ]  cmp dl, 0x1(esi)                                                 
  0x405d9e  [ -128364 ]  jnz cav:0x405dae         if (dl <> ??) goto 0x405dae             
--------------------------------------------------------------------------------
  0x405da0  [ -128364 ]  add eax, 0x2             eax := (eax + 2)                        
  0x405da3  [ -128364 ]  add esi, 0x2             esi := (esi + 2)                        
  0x405da6  [ -128364 ]  cmp cl, bl                                                       
  0x405da8  [ -128364 ]  jnz cav:0x405d8a         if (cl <> 0) goto 0x405d8a              
--------------------------------------------------------------------------------
  0x405daa  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x405dac  [ -128364 ]  jmp cav:0x405db3         goto 0x405db3                           
--------------------------------------------------------------------------------
  0x405dae  [ -128364 ]  sbb eax, eax             eax = (eax - eax) (= 0) or ((eax - eax) + 1) (= 1)
  0x405db0  [ -128364 ]  sbb eax, -0x1            eax = (eax - -1) or ((eax - -1) + 1) (= (eax + 2))
--------------------------------------------------------------------------------
  0x405db3  [ -128364 ]  cmp eax, ebx                                                     
  0x405db5  [ -128364 ]  jz cav:0x4065a3          if (eax == 0) goto 0x4065a3             
--------------------------------------------------------------------------------
  0x405dbb  [ -128364 ]  mov esi, 0x408fd4        esi = 0x408fd4                          
  0x405dc0  [ -128364 ]  mov eax, ebp             eax = ebp (= gv_0x412138_in)            
--------------------------------------------------------------------------------
  0x405dc2  [ -128364 ]  mov dl, (eax)            dl = ?                                  
  0x405dc4  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405dc6  [ -128364 ]  cmp dl, (esi)                                                    
  0x405dc8  [ -128364 ]  jnz cav:0x405de6         if (dl <> ??) goto 0x405de6             
--------------------------------------------------------------------------------
  0x405dca  [ -128364 ]  cmp cl, bl                                                       
  0x405dcc  [ -128364 ]  jz cav:0x405de2          if (cl == 0) goto 0x405de2              
--------------------------------------------------------------------------------
  0x405dce  [ -128364 ]  mov dl, 0x1(eax)         dl = ?                                  
  0x405dd1  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405dd3  [ -128364 ]  cmp dl, 0x1(esi)                                                 
  0x405dd6  [ -128364 ]  jnz cav:0x405de6         if (dl <> ??) goto 0x405de6             
--------------------------------------------------------------------------------
  0x405dd8  [ -128364 ]  add eax, 0x2             eax := (eax + 2)                        
  0x405ddb  [ -128364 ]  add esi, 0x2             esi := (esi + 2)                        
  0x405dde  [ -128364 ]  cmp cl, bl                                                       
  0x405de0  [ -128364 ]  jnz cav:0x405dc2         if (cl <> 0) goto 0x405dc2              
--------------------------------------------------------------------------------
  0x405de2  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x405de4  [ -128364 ]  jmp cav:0x405deb         goto 0x405deb                           
--------------------------------------------------------------------------------
  0x405de6  [ -128364 ]  sbb eax, eax             eax = (eax - eax) (= 0) or ((eax - eax) + 1) (= 1)
  0x405de8  [ -128364 ]  sbb eax, -0x1            eax = (eax - -1) or ((eax - -1) + 1) (= (eax + 2))
--------------------------------------------------------------------------------
  0x405deb  [ -128364 ]  cmp eax, ebx                                                     
  0x405ded  [ -128364 ]  jz cav:0x4065a3          if (eax == 0) goto 0x4065a3             
--------------------------------------------------------------------------------
  0x405df3  [ -128364 ]  mov esi, 0x408fcc        esi = 0x408fcc                          
  0x405df8  [ -128364 ]  mov eax, ebp             eax = ebp (= gv_0x412138_in)            
--------------------------------------------------------------------------------
  0x405dfa  [ -128364 ]  mov dl, (eax)            dl = ?                                  
  0x405dfc  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405dfe  [ -128364 ]  cmp dl, (esi)                                                    
  0x405e00  [ -128364 ]  jnz cav:0x405e1e         if (dl <> ??) goto 0x405e1e             
--------------------------------------------------------------------------------
  0x405e02  [ -128364 ]  cmp cl, bl                                                       
  0x405e04  [ -128364 ]  jz cav:0x405e1a          if (cl == 0) goto 0x405e1a              
--------------------------------------------------------------------------------
  0x405e06  [ -128364 ]  mov dl, 0x1(eax)         dl = ?                                  
  0x405e09  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405e0b  [ -128364 ]  cmp dl, 0x1(esi)                                                 
  0x405e0e  [ -128364 ]  jnz cav:0x405e1e         if (dl <> ??) goto 0x405e1e             
--------------------------------------------------------------------------------
  0x405e10  [ -128364 ]  add eax, 0x2             eax := (eax + 2)                        
  0x405e13  [ -128364 ]  add esi, 0x2             esi := (esi + 2)                        
  0x405e16  [ -128364 ]  cmp cl, bl                                                       
  0x405e18  [ -128364 ]  jnz cav:0x405dfa         if (cl <> 0) goto 0x405dfa              
--------------------------------------------------------------------------------
  0x405e1a  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x405e1c  [ -128364 ]  jmp cav:0x405e23         goto 0x405e23                           
--------------------------------------------------------------------------------
  0x405e1e  [ -128364 ]  sbb eax, eax             eax = (eax - eax) (= 0) or ((eax - eax) + 1) (= 1)
  0x405e20  [ -128364 ]  sbb eax, -0x1            eax = (eax - -1) or ((eax - -1) + 1) (= (eax + 2))
--------------------------------------------------------------------------------
  0x405e23  [ -128364 ]  cmp eax, ebx                                                     
  0x405e25  [ -128364 ]  jz cav:0x406588          if (eax == 0) goto 0x406588             
--------------------------------------------------------------------------------
  0x405e2b  [ -128364 ]  mov esi, 0x408fc4        esi = 0x408fc4                          
  0x405e30  [ -128364 ]  mov eax, ebp             eax = ebp (= gv_0x412138_in)            
--------------------------------------------------------------------------------
  0x405e32  [ -128364 ]  mov dl, (eax)            dl = ?                                  
  0x405e34  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405e36  [ -128364 ]  cmp dl, (esi)                                                    
  0x405e38  [ -128364 ]  jnz cav:0x405e56         if (dl <> ??) goto 0x405e56             
--------------------------------------------------------------------------------
  0x405e3a  [ -128364 ]  cmp cl, bl                                                       
  0x405e3c  [ -128364 ]  jz cav:0x405e52          if (cl == 0) goto 0x405e52              
--------------------------------------------------------------------------------
  0x405e3e  [ -128364 ]  mov dl, 0x1(eax)         dl = ?                                  
  0x405e41  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405e43  [ -128364 ]  cmp dl, 0x1(esi)                                                 
  0x405e46  [ -128364 ]  jnz cav:0x405e56         if (dl <> ??) goto 0x405e56             
--------------------------------------------------------------------------------
  0x405e48  [ -128364 ]  add eax, 0x2             eax := (eax + 2)                        
  0x405e4b  [ -128364 ]  add esi, 0x2             esi := (esi + 2)                        
  0x405e4e  [ -128364 ]  cmp cl, bl                                                       
  0x405e50  [ -128364 ]  jnz cav:0x405e32         if (cl <> 0) goto 0x405e32              
--------------------------------------------------------------------------------
  0x405e52  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x405e54  [ -128364 ]  jmp cav:0x405e5b         goto 0x405e5b                           
--------------------------------------------------------------------------------
  0x405e56  [ -128364 ]  sbb eax, eax             eax = (eax - eax) (= 0) or ((eax - eax) + 1) (= 1)
  0x405e58  [ -128364 ]  sbb eax, -0x1            eax = (eax - -1) or ((eax - -1) + 1) (= (eax + 2))
--------------------------------------------------------------------------------
  0x405e5b  [ -128364 ]  cmp eax, ebx                                                     
  0x405e5d  [ -128364 ]  jz cav:0x406588          if (eax == 0) goto 0x406588             
--------------------------------------------------------------------------------
  0x405e63  [ -128364 ]  mov esi, 0x408fbc        esi = 0x408fbc                          
  0x405e68  [ -128364 ]  mov eax, ebp             eax = ebp (= gv_0x412138_in)            
--------------------------------------------------------------------------------
  0x405e6a  [ -128364 ]  mov dl, (eax)            dl = ?                                  
  0x405e6c  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405e6e  [ -128364 ]  cmp dl, (esi)                                                    
  0x405e70  [ -128364 ]  jnz cav:0x405e8e         if (dl <> ??) goto 0x405e8e             
--------------------------------------------------------------------------------
  0x405e72  [ -128364 ]  cmp cl, bl                                                       
  0x405e74  [ -128364 ]  jz cav:0x405e8a          if (cl == 0) goto 0x405e8a              
--------------------------------------------------------------------------------
  0x405e76  [ -128364 ]  mov dl, 0x1(eax)         dl = ?                                  
  0x405e79  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405e7b  [ -128364 ]  cmp dl, 0x1(esi)                                                 
  0x405e7e  [ -128364 ]  jnz cav:0x405e8e         if (dl <> ??) goto 0x405e8e             
--------------------------------------------------------------------------------
  0x405e80  [ -128364 ]  add eax, 0x2             eax := (eax + 2)                        
  0x405e83  [ -128364 ]  add esi, 0x2             esi := (esi + 2)                        
  0x405e86  [ -128364 ]  cmp cl, bl                                                       
  0x405e88  [ -128364 ]  jnz cav:0x405e6a         if (cl <> 0) goto 0x405e6a              
--------------------------------------------------------------------------------
  0x405e8a  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x405e8c  [ -128364 ]  jmp cav:0x405e93         goto 0x405e93                           
--------------------------------------------------------------------------------
  0x405e8e  [ -128364 ]  sbb eax, eax             eax = (eax - eax) (= 0) or ((eax - eax) + 1) (= 1)
  0x405e90  [ -128364 ]  sbb eax, -0x1            eax = (eax - -1) or ((eax - -1) + 1) (= (eax + 2))
--------------------------------------------------------------------------------
  0x405e93  [ -128364 ]  cmp eax, ebx                                                     
  0x405e95  [ -128364 ]  jz cav:0x40654e          if (eax == 0) goto 0x40654e             
--------------------------------------------------------------------------------
  0x405e9b  [ -128364 ]  mov esi, 0x408fb8        esi = 0x408fb8                          
  0x405ea0  [ -128364 ]  mov eax, ebp             eax = ebp (= gv_0x412138_in)            
--------------------------------------------------------------------------------
  0x405ea2  [ -128364 ]  mov dl, (eax)            dl = ?                                  
  0x405ea4  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405ea6  [ -128364 ]  cmp dl, (esi)                                                    
  0x405ea8  [ -128364 ]  jnz cav:0x405ec6         if (dl <> ??) goto 0x405ec6             
--------------------------------------------------------------------------------
  0x405eaa  [ -128364 ]  cmp cl, bl                                                       
  0x405eac  [ -128364 ]  jz cav:0x405ec2          if (cl == 0) goto 0x405ec2              
--------------------------------------------------------------------------------
  0x405eae  [ -128364 ]  mov dl, 0x1(eax)         dl = ?                                  
  0x405eb1  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405eb3  [ -128364 ]  cmp dl, 0x1(esi)                                                 
  0x405eb6  [ -128364 ]  jnz cav:0x405ec6         if (dl <> ??) goto 0x405ec6             
--------------------------------------------------------------------------------
  0x405eb8  [ -128364 ]  add eax, 0x2             eax := (eax + 2)                        
  0x405ebb  [ -128364 ]  add esi, 0x2             esi := (esi + 2)                        
  0x405ebe  [ -128364 ]  cmp cl, bl                                                       
  0x405ec0  [ -128364 ]  jnz cav:0x405ea2         if (cl <> 0) goto 0x405ea2              
--------------------------------------------------------------------------------
  0x405ec2  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x405ec4  [ -128364 ]  jmp cav:0x405ecb         goto 0x405ecb                           
--------------------------------------------------------------------------------
  0x405ec6  [ -128364 ]  sbb eax, eax             eax = (eax - eax) (= 0) or ((eax - eax) + 1) (= 1)
  0x405ec8  [ -128364 ]  sbb eax, -0x1            eax = (eax - -1) or ((eax - -1) + 1) (= (eax + 2))
--------------------------------------------------------------------------------
  0x405ecb  [ -128364 ]  cmp eax, ebx                                                     
  0x405ecd  [ -128364 ]  jz cav:0x40654e          if (eax == 0) goto 0x40654e             
--------------------------------------------------------------------------------
  0x405ed3  [ -128364 ]  mov esi, 0x408fac        esi = 0x408fac                          
  0x405ed8  [ -128364 ]  mov eax, ebp             eax = ebp (= gv_0x412138_in)            
--------------------------------------------------------------------------------
  0x405eda  [ -128364 ]  mov dl, (eax)            dl = ?                                  
  0x405edc  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405ede  [ -128364 ]  cmp dl, (esi)                                                    
  0x405ee0  [ -128364 ]  jnz cav:0x405efe         if (dl <> ??) goto 0x405efe             
--------------------------------------------------------------------------------
  0x405ee2  [ -128364 ]  cmp cl, bl                                                       
  0x405ee4  [ -128364 ]  jz cav:0x405efa          if (cl == 0) goto 0x405efa              
--------------------------------------------------------------------------------
  0x405ee6  [ -128364 ]  mov dl, 0x1(eax)         dl = ?                                  
  0x405ee9  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405eeb  [ -128364 ]  cmp dl, 0x1(esi)                                                 
  0x405eee  [ -128364 ]  jnz cav:0x405efe         if (dl <> ??) goto 0x405efe             
--------------------------------------------------------------------------------
  0x405ef0  [ -128364 ]  add eax, 0x2             eax := (eax + 2)                        
  0x405ef3  [ -128364 ]  add esi, 0x2             esi := (esi + 2)                        
  0x405ef6  [ -128364 ]  cmp cl, bl                                                       
  0x405ef8  [ -128364 ]  jnz cav:0x405eda         if (cl <> 0) goto 0x405eda              
--------------------------------------------------------------------------------
  0x405efa  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x405efc  [ -128364 ]  jmp cav:0x405f03         goto 0x405f03                           
--------------------------------------------------------------------------------
  0x405efe  [ -128364 ]  sbb eax, eax             eax = (eax - eax) (= 0) or ((eax - eax) + 1) (= 1)
  0x405f00  [ -128364 ]  sbb eax, -0x1            eax = (eax - -1) or ((eax - -1) + 1) (= (eax + 2))
--------------------------------------------------------------------------------
  0x405f03  [ -128364 ]  cmp eax, ebx                                                     
  0x405f05  [ -128364 ]  jz cav:0x406514          if (eax == 0) goto 0x406514             
--------------------------------------------------------------------------------
  0x405f0b  [ -128364 ]  mov esi, 0x408fa8        esi = 0x408fa8                          
  0x405f10  [ -128364 ]  mov eax, ebp             eax = ebp (= gv_0x412138_in)            
--------------------------------------------------------------------------------
  0x405f12  [ -128364 ]  mov dl, (eax)            dl = ?                                  
  0x405f14  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405f16  [ -128364 ]  cmp dl, (esi)                                                    
  0x405f18  [ -128364 ]  jnz cav:0x405f36         if (dl <> ??) goto 0x405f36             
--------------------------------------------------------------------------------
  0x405f1a  [ -128364 ]  cmp cl, bl                                                       
  0x405f1c  [ -128364 ]  jz cav:0x405f32          if (cl == 0) goto 0x405f32              
--------------------------------------------------------------------------------
  0x405f1e  [ -128364 ]  mov dl, 0x1(eax)         dl = ?                                  
  0x405f21  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405f23  [ -128364 ]  cmp dl, 0x1(esi)                                                 
  0x405f26  [ -128364 ]  jnz cav:0x405f36         if (dl <> ??) goto 0x405f36             
--------------------------------------------------------------------------------
  0x405f28  [ -128364 ]  add eax, 0x2             eax := (eax + 2)                        
  0x405f2b  [ -128364 ]  add esi, 0x2             esi := (esi + 2)                        
  0x405f2e  [ -128364 ]  cmp cl, bl                                                       
  0x405f30  [ -128364 ]  jnz cav:0x405f12         if (cl <> 0) goto 0x405f12              
--------------------------------------------------------------------------------
  0x405f32  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x405f34  [ -128364 ]  jmp cav:0x405f3b         goto 0x405f3b                           
--------------------------------------------------------------------------------
  0x405f36  [ -128364 ]  sbb eax, eax             eax = (eax - eax) (= 0) or ((eax - eax) + 1) (= 1)
  0x405f38  [ -128364 ]  sbb eax, -0x1            eax = (eax - -1) or ((eax - -1) + 1) (= (eax + 2))
--------------------------------------------------------------------------------
  0x405f3b  [ -128364 ]  cmp eax, ebx                                                     
  0x405f3d  [ -128364 ]  jz cav:0x406514          if (eax == 0) goto 0x406514             
--------------------------------------------------------------------------------
  0x405f43  [ -128364 ]  mov edi, 0x412c40        edi = 0x412c40                          
  0x405f48  [ -128364 ]  or ecx, -0x1             ecx = -1                                
  0x405f4b  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x405f4d  [ -128364 ]  repne scas               repne scas:pending                      
  0x405f4f  [ -128364 ]  not ecx                  ecx = ( ~ecx)                           
  0x405f51  [ -128364 ]  dec ecx                  ecx = (ecx - 1)                         
  0x405f52  [ -128364 ]  jnz cav:0x405f67         if (ecx <> 1) goto 0x405f67             
--------------------------------------------------------------------------------
  0x405f54  [ -128364 ]  push 0x408f8c            [0x405f59:1: 0x408f8c: "Pls choose target first!\n"]
  0x405f59  [ -128368 ]  call* 0x407114           printf(format:0x408f8c: "Pls choose target first!\n") (MSVCRT.dll)
  0x405f5f  [ -128368 ]  add esp, 0x4             esp := (esp + 4) (= (esp_in - 0x1f56c)) 
  0x405f62  [ -128364 ]  jmp cav:0x4066e3         goto 0x4066e3                           
--------------------------------------------------------------------------------
  0x405f67  [ -128364 ]  mov esi, 0x408290        esi = 0x408290: "sleep"                 
  0x405f6c  [ -128364 ]  mov eax, ebp             eax = ebp (= gv_0x412138_in)            
--------------------------------------------------------------------------------
  0x405f6e  [ -128364 ]  mov dl, (eax)            dl = ?                                  
  0x405f70  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405f72  [ -128364 ]  cmp dl, (esi)                                                    
  0x405f74  [ -128364 ]  jnz cav:0x405f92         if (dl <> ??) goto 0x405f92             
--------------------------------------------------------------------------------
  0x405f76  [ -128364 ]  cmp cl, bl                                                       
  0x405f78  [ -128364 ]  jz cav:0x405f8e          if (cl == 0) goto 0x405f8e              
--------------------------------------------------------------------------------
  0x405f7a  [ -128364 ]  mov dl, 0x1(eax)         dl = ?                                  
  0x405f7d  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405f7f  [ -128364 ]  cmp dl, 0x1(esi)                                                 
  0x405f82  [ -128364 ]  jnz cav:0x405f92         if (dl <> ??) goto 0x405f92             
--------------------------------------------------------------------------------
  0x405f84  [ -128364 ]  add eax, 0x2             eax := (eax + 2)                        
  0x405f87  [ -128364 ]  add esi, 0x2             esi := (esi + 2)                        
  0x405f8a  [ -128364 ]  cmp cl, bl                                                       
  0x405f8c  [ -128364 ]  jnz cav:0x405f6e         if (cl <> 0) goto 0x405f6e              
--------------------------------------------------------------------------------
  0x405f8e  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x405f90  [ -128364 ]  jmp cav:0x405f97         goto 0x405f97                           
--------------------------------------------------------------------------------
  0x405f92  [ -128364 ]  sbb eax, eax             eax = (eax - eax) (= 0) or ((eax - eax) + 1) (= 1)
  0x405f94  [ -128364 ]  sbb eax, -0x1            eax = (eax - -1) or ((eax - -1) + 1) (= (eax + 2))
--------------------------------------------------------------------------------
  0x405f97  [ -128364 ]  cmp eax, ebx                                                     
  0x405f99  [ -128364 ]  jnz cav:0x405fe0         if (eax <> 0) goto 0x405fe0             
--------------------------------------------------------------------------------
  0x405f9b  [ -128364 ]  mov edx, 0x41213c        edx = gv_0x41213c (= gv_0x41213c_in)    
  0x405fa1  [ -128364 ]  cmp edx, ebx                                                     
  0x405fa3  [ -128364 ]  jz cav:0x4063bf          if (gv_0x41213c_in == 0) goto 0x4063bf  
--------------------------------------------------------------------------------
  0x405fa9  [ -128364 ]  mov eax, 0x1f570(esp,,1) eax = arg.0004 (= arg.0004_in)          
  0x405fb0  [ -128364 ]  push 0x1                 [0x405fd3:8: 1]                         
  0x405fb2  [ -128368 ]  push eax                 [0x405fd3:7: arg.0004_in]               
  0x405fb3  [ -128372 ]  mov edi, edx             edi = edx (= gv_0x41213c_in)            
  0x405fb5  [ -128372 ]  or ecx, -0x1             ecx = -1                                
  0x405fb8  [ -128372 ]  xor eax, eax             eax = 0                                 
  0x405fba  [ -128372 ]  repne scas               repne scas:pending                      
  0x405fbc  [ -128372 ]  not ecx                  ecx = ( ~ecx)                           
  0x405fbe  [ -128372 ]  push edx                 [0x405fd3:6: gv_0x41213c_in]            
  0x405fbf  [ -128376 ]  push edx                 [0x405fd3:5: gv_0x41213c_in]            
  0x405fc0  [ -128380 ]  dec ecx                  ecx = (ecx - 1)                         
  0x405fc1  [ -128380 ]  push ebx                 [0x405fd3:4: 0]                         
  0x405fc2  [ -128384 ]  push ecx                 [0x405fd3:3: ecx]                       
  0x405fc3  [ -128388 ]  mov edi, edx             edi = edx (= gv_0x41213c_in)            
  0x405fc5  [ -128388 ]  or ecx, -0x1             ecx = -1                                
  0x405fc8  [ -128388 ]  repne scas               repne scas:pending                      
  0x405fca  [ -128388 ]  not ecx                  ecx = ( ~ecx)                           
  0x405fcc  [ -128388 ]  dec ecx                  ecx = (ecx - 1)                         
  0x405fcd  [ -128388 ]  push ecx                 [0x405fd3:2: ecx]                       
  0x405fce  [ -128392 ]  push 0x408290            [0x405fd3:1: 0x408290: "sleep"]         
  0x405fd3  [ -128396 ]  call cav:0x404230        App:0x404230(arg1:0x408290: "sleep",arg2:var.128392,arg3:var.128388,arg4:0,arg5:gv_0x41213c_in,arg6:gv_0x41213c_in,arg7:arg.0004_in,arg8:1)
  0x405fd8  [ -128396 ]  add esp, 0x20            esp := (esp + 32) (= (esp_in - 0x1f56c))
  0x405fdb  [ -128364 ]  jmp cav:0x4066e3         goto 0x4066e3                           
--------------------------------------------------------------------------------
  0x405fe0  [ -128364 ]  mov esi, 0x408f84        esi = 0x408f84                          
  0x405fe5  [ -128364 ]  mov eax, ebp             eax = ebp (= gv_0x412138_in)            
--------------------------------------------------------------------------------
  0x405fe7  [ -128364 ]  mov dl, (eax)            dl = ?                                  
  0x405fe9  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405feb  [ -128364 ]  cmp dl, (esi)                                                    
  0x405fed  [ -128364 ]  jnz cav:0x40600b         if (dl <> ??) goto 0x40600b             
--------------------------------------------------------------------------------
  0x405fef  [ -128364 ]  cmp cl, bl                                                       
  0x405ff1  [ -128364 ]  jz cav:0x406007          if (cl == 0) goto 0x406007              
--------------------------------------------------------------------------------
  0x405ff3  [ -128364 ]  mov dl, 0x1(eax)         dl = ?                                  
  0x405ff6  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x405ff8  [ -128364 ]  cmp dl, 0x1(esi)                                                 
  0x405ffb  [ -128364 ]  jnz cav:0x40600b         if (dl <> ??) goto 0x40600b             
--------------------------------------------------------------------------------
  0x405ffd  [ -128364 ]  add eax, 0x2             eax := (eax + 2)                        
  0x406000  [ -128364 ]  add esi, 0x2             esi := (esi + 2)                        
  0x406003  [ -128364 ]  cmp cl, bl                                                       
  0x406005  [ -128364 ]  jnz cav:0x405fe7         if (cl <> 0) goto 0x405fe7              
--------------------------------------------------------------------------------
  0x406007  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x406009  [ -128364 ]  jmp cav:0x406010         goto 0x406010                           
--------------------------------------------------------------------------------
  0x40600b  [ -128364 ]  sbb eax, eax             eax = (eax - eax) (= 0) or ((eax - eax) + 1) (= 1)
  0x40600d  [ -128364 ]  sbb eax, -0x1            eax = (eax - -1) or ((eax - -1) + 1) (= (eax + 2))
--------------------------------------------------------------------------------
  0x406010  [ -128364 ]  cmp eax, ebx                                                     
  0x406012  [ -128364 ]  jz cav:0x4064c2          if (eax == 0) goto 0x4064c2             
--------------------------------------------------------------------------------
  0x406018  [ -128364 ]  mov esi, 0x408f80        esi = 0x408f80                          
  0x40601d  [ -128364 ]  mov eax, ebp             eax = ebp (= gv_0x412138_in)            
--------------------------------------------------------------------------------
  0x40601f  [ -128364 ]  mov dl, (eax)            dl = ?                                  
  0x406021  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x406023  [ -128364 ]  cmp dl, (esi)                                                    
  0x406025  [ -128364 ]  jnz cav:0x406043         if (dl <> ??) goto 0x406043             
--------------------------------------------------------------------------------
  0x406027  [ -128364 ]  cmp cl, bl                                                       
  0x406029  [ -128364 ]  jz cav:0x40603f          if (cl == 0) goto 0x40603f              
--------------------------------------------------------------------------------
  0x40602b  [ -128364 ]  mov dl, 0x1(eax)         dl = ?                                  
  0x40602e  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x406030  [ -128364 ]  cmp dl, 0x1(esi)                                                 
  0x406033  [ -128364 ]  jnz cav:0x406043         if (dl <> ??) goto 0x406043             
--------------------------------------------------------------------------------
  0x406035  [ -128364 ]  add eax, 0x2             eax := (eax + 2)                        
  0x406038  [ -128364 ]  add esi, 0x2             esi := (esi + 2)                        
  0x40603b  [ -128364 ]  cmp cl, bl                                                       
  0x40603d  [ -128364 ]  jnz cav:0x40601f         if (cl <> 0) goto 0x40601f              
--------------------------------------------------------------------------------
  0x40603f  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x406041  [ -128364 ]  jmp cav:0x406048         goto 0x406048                           
--------------------------------------------------------------------------------
  0x406043  [ -128364 ]  sbb eax, eax             eax = (eax - eax) (= 0) or ((eax - eax) + 1) (= 1)
  0x406045  [ -128364 ]  sbb eax, -0x1            eax = (eax - -1) or ((eax - -1) + 1) (= (eax + 2))
--------------------------------------------------------------------------------
  0x406048  [ -128364 ]  cmp eax, ebx                                                     
  0x40604a  [ -128364 ]  jz cav:0x4064c2          if (eax == 0) goto 0x4064c2             
--------------------------------------------------------------------------------
  0x406050  [ -128364 ]  mov esi, 0x408f78        esi = 0x408f78                          
  0x406055  [ -128364 ]  mov eax, ebp             eax = ebp (= gv_0x412138_in)            
--------------------------------------------------------------------------------
  0x406057  [ -128364 ]  mov dl, (eax)            dl = ?                                  
  0x406059  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x40605b  [ -128364 ]  cmp dl, (esi)                                                    
  0x40605d  [ -128364 ]  jnz cav:0x40607b         if (dl <> ??) goto 0x40607b             
--------------------------------------------------------------------------------
  0x40605f  [ -128364 ]  cmp cl, bl                                                       
  0x406061  [ -128364 ]  jz cav:0x406077          if (cl == 0) goto 0x406077              
--------------------------------------------------------------------------------
  0x406063  [ -128364 ]  mov dl, 0x1(eax)         dl = ?                                  
  0x406066  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x406068  [ -128364 ]  cmp dl, 0x1(esi)                                                 
  0x40606b  [ -128364 ]  jnz cav:0x40607b         if (dl <> ??) goto 0x40607b             
--------------------------------------------------------------------------------
  0x40606d  [ -128364 ]  add eax, 0x2             eax := (eax + 2)                        
  0x406070  [ -128364 ]  add esi, 0x2             esi := (esi + 2)                        
  0x406073  [ -128364 ]  cmp cl, bl                                                       
  0x406075  [ -128364 ]  jnz cav:0x406057         if (cl <> 0) goto 0x406057              
--------------------------------------------------------------------------------
  0x406077  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x406079  [ -128364 ]  jmp cav:0x406080         goto 0x406080                           
--------------------------------------------------------------------------------
  0x40607b  [ -128364 ]  sbb eax, eax             eax = (eax - eax) (= 0) or ((eax - eax) + 1) (= 1)
  0x40607d  [ -128364 ]  sbb eax, -0x1            eax = (eax - -1) or ((eax - -1) + 1) (= (eax + 2))
--------------------------------------------------------------------------------
  0x406080  [ -128364 ]  cmp eax, ebx                                                     
  0x406082  [ -128364 ]  jz cav:0x406470          if (eax == 0) goto 0x406470             
--------------------------------------------------------------------------------
  0x406088  [ -128364 ]  mov esi, 0x408f74        esi = 0x408f74                          
  0x40608d  [ -128364 ]  mov eax, ebp             eax = ebp (= gv_0x412138_in)            
--------------------------------------------------------------------------------
  0x40608f  [ -128364 ]  mov dl, (eax)            dl = ?                                  
  0x406091  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x406093  [ -128364 ]  cmp dl, (esi)                                                    
  0x406095  [ -128364 ]  jnz cav:0x4060b3         if (dl <> ??) goto 0x4060b3             
--------------------------------------------------------------------------------
  0x406097  [ -128364 ]  cmp cl, bl                                                       
  0x406099  [ -128364 ]  jz cav:0x4060af          if (cl == 0) goto 0x4060af              
--------------------------------------------------------------------------------
  0x40609b  [ -128364 ]  mov dl, 0x1(eax)         dl = ?                                  
  0x40609e  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x4060a0  [ -128364 ]  cmp dl, 0x1(esi)                                                 
  0x4060a3  [ -128364 ]  jnz cav:0x4060b3         if (dl <> ??) goto 0x4060b3             
--------------------------------------------------------------------------------
  0x4060a5  [ -128364 ]  add eax, 0x2             eax := (eax + 2)                        
  0x4060a8  [ -128364 ]  add esi, 0x2             esi := (esi + 2)                        
  0x4060ab  [ -128364 ]  cmp cl, bl                                                       
  0x4060ad  [ -128364 ]  jnz cav:0x40608f         if (cl <> 0) goto 0x40608f              
--------------------------------------------------------------------------------
  0x4060af  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x4060b1  [ -128364 ]  jmp cav:0x4060b8         goto 0x4060b8                           
--------------------------------------------------------------------------------
  0x4060b3  [ -128364 ]  sbb eax, eax             eax = (eax - eax) (= 0) or ((eax - eax) + 1) (= 1)
  0x4060b5  [ -128364 ]  sbb eax, -0x1            eax = (eax - -1) or ((eax - -1) + 1) (= (eax + 2))
--------------------------------------------------------------------------------
  0x4060b8  [ -128364 ]  cmp eax, ebx                                                     
  0x4060ba  [ -128364 ]  jz cav:0x406470          if (eax == 0) goto 0x406470             
--------------------------------------------------------------------------------
  0x4060c0  [ -128364 ]  mov esi, 0x408f68        esi = 0x408f68                          
  0x4060c5  [ -128364 ]  mov eax, ebp             eax = ebp (= gv_0x412138_in)            
--------------------------------------------------------------------------------
  0x4060c7  [ -128364 ]  mov dl, (eax)            dl = ?                                  
  0x4060c9  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x4060cb  [ -128364 ]  cmp dl, (esi)                                                    
  0x4060cd  [ -128364 ]  jnz cav:0x4060eb         if (dl <> ??) goto 0x4060eb             
--------------------------------------------------------------------------------
  0x4060cf  [ -128364 ]  cmp cl, bl                                                       
  0x4060d1  [ -128364 ]  jz cav:0x4060e7          if (cl == 0) goto 0x4060e7              
--------------------------------------------------------------------------------
  0x4060d3  [ -128364 ]  mov dl, 0x1(eax)         dl = ?                                  
  0x4060d6  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x4060d8  [ -128364 ]  cmp dl, 0x1(esi)                                                 
  0x4060db  [ -128364 ]  jnz cav:0x4060eb         if (dl <> ??) goto 0x4060eb             
--------------------------------------------------------------------------------
  0x4060dd  [ -128364 ]  add eax, 0x2             eax := (eax + 2)                        
  0x4060e0  [ -128364 ]  add esi, 0x2             esi := (esi + 2)                        
  0x4060e3  [ -128364 ]  cmp cl, bl                                                       
  0x4060e5  [ -128364 ]  jnz cav:0x4060c7         if (cl <> 0) goto 0x4060c7              
--------------------------------------------------------------------------------
  0x4060e7  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x4060e9  [ -128364 ]  jmp cav:0x4060f0         goto 0x4060f0                           
--------------------------------------------------------------------------------
  0x4060eb  [ -128364 ]  sbb eax, eax             eax = (eax - eax) (= 0) or ((eax - eax) + 1) (= 1)
  0x4060ed  [ -128364 ]  sbb eax, -0x1            eax = (eax - -1) or ((eax - -1) + 1) (= (eax + 2))
--------------------------------------------------------------------------------
  0x4060f0  [ -128364 ]  cmp eax, ebx                                                     
  0x4060f2  [ -128364 ]  jz cav:0x40644d          if (eax == 0) goto 0x40644d             
--------------------------------------------------------------------------------
  0x4060f8  [ -128364 ]  mov esi, 0x408298        esi = 0x408298                          
  0x4060fd  [ -128364 ]  mov eax, ebp             eax = ebp (= gv_0x412138_in)            
--------------------------------------------------------------------------------
  0x4060ff  [ -128364 ]  mov dl, (eax)            dl = ?                                  
  0x406101  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x406103  [ -128364 ]  cmp dl, (esi)                                                    
  0x406105  [ -128364 ]  jnz cav:0x406123         if (dl <> ??) goto 0x406123             
--------------------------------------------------------------------------------
  0x406107  [ -128364 ]  cmp cl, bl                                                       
  0x406109  [ -128364 ]  jz cav:0x40611f          if (cl == 0) goto 0x40611f              
--------------------------------------------------------------------------------
  0x40610b  [ -128364 ]  mov dl, 0x1(eax)         dl = ?                                  
  0x40610e  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x406110  [ -128364 ]  cmp dl, 0x1(esi)                                                 
  0x406113  [ -128364 ]  jnz cav:0x406123         if (dl <> ??) goto 0x406123             
--------------------------------------------------------------------------------
  0x406115  [ -128364 ]  add eax, 0x2             eax := (eax + 2)                        
  0x406118  [ -128364 ]  add esi, 0x2             esi := (esi + 2)                        
  0x40611b  [ -128364 ]  cmp cl, bl                                                       
  0x40611d  [ -128364 ]  jnz cav:0x4060ff         if (cl <> 0) goto 0x4060ff              
--------------------------------------------------------------------------------
  0x40611f  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x406121  [ -128364 ]  jmp cav:0x406128         goto 0x406128                           
--------------------------------------------------------------------------------
  0x406123  [ -128364 ]  sbb eax, eax             eax = (eax - eax) (= 0) or ((eax - eax) + 1) (= 1)
  0x406125  [ -128364 ]  sbb eax, -0x1            eax = (eax - -1) or ((eax - -1) + 1) (= (eax + 2))
--------------------------------------------------------------------------------
  0x406128  [ -128364 ]  cmp eax, ebx                                                     
  0x40612a  [ -128364 ]  jz cav:0x40644d          if (eax == 0) goto 0x40644d             
--------------------------------------------------------------------------------
  0x406130  [ -128364 ]  mov esi, 0x4082ec        esi = 0x4082ec: "shell"                 
  0x406135  [ -128364 ]  mov eax, ebp             eax = ebp (= gv_0x412138_in)            
--------------------------------------------------------------------------------
  0x406137  [ -128364 ]  mov dl, (eax)            dl = ?                                  
  0x406139  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x40613b  [ -128364 ]  cmp dl, (esi)                                                    
  0x40613d  [ -128364 ]  jnz cav:0x40615b         if (dl <> ??) goto 0x40615b             
--------------------------------------------------------------------------------
  0x40613f  [ -128364 ]  cmp cl, bl                                                       
  0x406141  [ -128364 ]  jz cav:0x406157          if (cl == 0) goto 0x406157              
--------------------------------------------------------------------------------
  0x406143  [ -128364 ]  mov dl, 0x1(eax)         dl = ?                                  
  0x406146  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x406148  [ -128364 ]  cmp dl, 0x1(esi)                                                 
  0x40614b  [ -128364 ]  jnz cav:0x40615b         if (dl <> ??) goto 0x40615b             
--------------------------------------------------------------------------------
  0x40614d  [ -128364 ]  add eax, 0x2             eax := (eax + 2)                        
  0x406150  [ -128364 ]  add esi, 0x2             esi := (esi + 2)                        
  0x406153  [ -128364 ]  cmp cl, bl                                                       
  0x406155  [ -128364 ]  jnz cav:0x406137         if (cl <> 0) goto 0x406137              
--------------------------------------------------------------------------------
  0x406157  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x406159  [ -128364 ]  jmp cav:0x406160         goto 0x406160                           
--------------------------------------------------------------------------------
  0x40615b  [ -128364 ]  sbb eax, eax             eax = (eax - eax) (= 0) or ((eax - eax) + 1) (= 1)
  0x40615d  [ -128364 ]  sbb eax, -0x1            eax = (eax - -1) or ((eax - -1) + 1) (= (eax + 2))
--------------------------------------------------------------------------------
  0x406160  [ -128364 ]  cmp eax, ebx                                                     
  0x406162  [ -128364 ]  jnz cav:0x406184         if (eax <> 0) goto 0x406184             
--------------------------------------------------------------------------------
  0x406164  [ -128364 ]  mov eax, 0x1f570(esp,,1) eax = arg.0004 (= arg.0004_in)          
  0x40616b  [ -128364 ]  push 0x1                 var.128368 := 1                         
  0x40616d  [ -128368 ]  push eax                 var.128372 := eax                       
  0x40616e  [ -128372 ]  push 0x4082ec            var.128376 := 0x4082ec: "shell"         
  0x406173  [ -128376 ]  push 0x408f64            var.128380 := 0x408f64: "cd"            
  0x406178  [ -128380 ]  push ebx                 var.128384 := ebx                       
  0x406179  [ -128384 ]  push 0x2                 var.128388 := 2                         
  0x40617b  [ -128388 ]  push 0x2                 var.128392 := 2                         
  0x40617d  [ -128392 ]  push 0x4082ec            var.128396 := 0x4082ec: "shell"         
  0x406182  [ -128396 ]  jmp cav:0x4061d6         goto 0x4061d6                           
--------------------------------------------------------------------------------
  0x406184  [ -128364 ]  mov esi, 0x4082e0        esi = 0x4082e0                          
  0x406189  [ -128364 ]  mov eax, ebp             eax = ebp (= gv_0x412138_in)            
--------------------------------------------------------------------------------
  0x40618b  [ -128364 ]  mov dl, (eax)            dl = ?                                  
  0x40618d  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x40618f  [ -128364 ]  cmp dl, (esi)                                                    
  0x406191  [ -128364 ]  jnz cav:0x4061af         if (dl <> ??) goto 0x4061af             
--------------------------------------------------------------------------------
  0x406193  [ -128364 ]  cmp cl, bl                                                       
  0x406195  [ -128364 ]  jz cav:0x4061ab          if (cl == 0) goto 0x4061ab              
--------------------------------------------------------------------------------
  0x406197  [ -128364 ]  mov dl, 0x1(eax)         dl = ?                                  
  0x40619a  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x40619c  [ -128364 ]  cmp dl, 0x1(esi)                                                 
  0x40619f  [ -128364 ]  jnz cav:0x4061af         if (dl <> ??) goto 0x4061af             
--------------------------------------------------------------------------------
  0x4061a1  [ -128364 ]  add eax, 0x2             eax := (eax + 2)                        
  0x4061a4  [ -128364 ]  add esi, 0x2             esi := (esi + 2)                        
  0x4061a7  [ -128364 ]  cmp cl, bl                                                       
  0x4061a9  [ -128364 ]  jnz cav:0x40618b         if (cl <> 0) goto 0x40618b              
--------------------------------------------------------------------------------
  0x4061ab  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x4061ad  [ -128364 ]  jmp cav:0x4061b4         goto 0x4061b4                           
--------------------------------------------------------------------------------
  0x4061af  [ -128364 ]  sbb eax, eax             eax = (eax - eax) (= 0) or ((eax - eax) + 1) (= 1)
  0x4061b1  [ -128364 ]  sbb eax, -0x1            eax = (eax - -1) or ((eax - -1) + 1) (= (eax + 2))
--------------------------------------------------------------------------------
  0x4061b4  [ -128364 ]  cmp eax, ebx                                                     
  0x4061b6  [ -128364 ]  jnz cav:0x4061ed         if (eax <> 0) goto 0x4061ed             
--------------------------------------------------------------------------------
  0x4061b8  [ -128364 ]  mov eax, 0x1f570(esp,,1) eax = arg.0004 (= arg.0004_in)          
  0x4061bf  [ -128364 ]  push 0x1                 var.128368 := 1                         
  0x4061c1  [ -128368 ]  push eax                 var.128372 := eax                       
  0x4061c2  [ -128372 ]  push 0x4082e0            var.128376 := 0x4082e0                  
  0x4061c7  [ -128376 ]  push 0x408f64            var.128380 := 0x408f64: "cd"            
  0x4061cc  [ -128380 ]  push ebx                 var.128384 := ebx                       
  0x4061cd  [ -128384 ]  push 0x2                 var.128388 := 2                         
  0x4061cf  [ -128388 ]  push 0x2                 var.128392 := 2                         
  0x4061d1  [ -128392 ]  push 0x4082e0            var.128396 := 0x4082e0                  
--------------------------------------------------------------------------------
  0x4061d6  [ -128396 ]  call cav:0x404230        App:0x404230(arg1:var.128396,arg2:var.128392,arg3:var.128388,arg4:0,arg5:var.128380,arg6:var.128376,arg7:arg.0004_in,arg8:1)
  0x4061db  [ -128396 ]  add esp, 0x20            esp := (esp + 32) (= (esp_in - 0x1f56c))
  0x4061de  [ -128364 ]  mov 0x4125ec, 0x1        gv_0x4125ec = 1                         
  0x4061e8  [ -128364 ]  jmp cav:0x4066e3         goto 0x4066e3                           
--------------------------------------------------------------------------------
  0x4061ed  [ -128364 ]  mov esi, 0x4082d8        esi = 0x4082d8: "listp"                 
  0x4061f2  [ -128364 ]  mov eax, ebp             eax = ebp (= gv_0x412138_in)            
--------------------------------------------------------------------------------
  0x4061f4  [ -128364 ]  mov dl, (eax)            dl = ?                                  
  0x4061f6  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x4061f8  [ -128364 ]  cmp dl, (esi)                                                    
  0x4061fa  [ -128364 ]  jnz cav:0x406218         if (dl <> ??) goto 0x406218             
--------------------------------------------------------------------------------
  0x4061fc  [ -128364 ]  cmp cl, bl                                                       
  0x4061fe  [ -128364 ]  jz cav:0x406214          if (cl == 0) goto 0x406214              
--------------------------------------------------------------------------------
  0x406200  [ -128364 ]  mov dl, 0x1(eax)         dl = ?                                  
  0x406203  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x406205  [ -128364 ]  cmp dl, 0x1(esi)                                                 
  0x406208  [ -128364 ]  jnz cav:0x406218         if (dl <> ??) goto 0x406218             
--------------------------------------------------------------------------------
  0x40620a  [ -128364 ]  add eax, 0x2             eax := (eax + 2)                        
  0x40620d  [ -128364 ]  add esi, 0x2             esi := (esi + 2)                        
  0x406210  [ -128364 ]  cmp cl, bl                                                       
  0x406212  [ -128364 ]  jnz cav:0x4061f4         if (cl <> 0) goto 0x4061f4              
--------------------------------------------------------------------------------
  0x406214  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x406216  [ -128364 ]  jmp cav:0x40621d         goto 0x40621d                           
--------------------------------------------------------------------------------
  0x406218  [ -128364 ]  sbb eax, eax             eax = (eax - eax) (= 0) or ((eax - eax) + 1) (= 1)
  0x40621a  [ -128364 ]  sbb eax, -0x1            eax = (eax - -1) or ((eax - -1) + 1) (= (eax + 2))
--------------------------------------------------------------------------------
  0x40621d  [ -128364 ]  cmp eax, ebx                                                     
  0x40621f  [ -128364 ]  jnz cav:0x40624c         if (eax <> 0) goto 0x40624c             
--------------------------------------------------------------------------------
  0x406221  [ -128364 ]  mov eax, 0x1f570(esp,,1) eax = arg.0004 (= arg.0004_in)          
  0x406228  [ -128364 ]  push 0x1                 [0x40623f:8: 1]                         
  0x40622a  [ -128368 ]  push eax                 [0x40623f:7: arg.0004_in]               
  0x40622b  [ -128372 ]  push 0x4082d8            [0x40623f:6: 0x4082d8: "listp"]         
  0x406230  [ -128376 ]  push 0x408f64            [0x40623f:5: 0x408f64: "cd"]            
  0x406235  [ -128380 ]  push ebx                 [0x40623f:4: 0]                         
  0x406236  [ -128384 ]  push 0x2                 [0x40623f:3: 2]                         
  0x406238  [ -128388 ]  push 0x2                 [0x40623f:2: 2]                         
  0x40623a  [ -128392 ]  push 0x4082d8            [0x40623f:1: 0x4082d8: "listp"]         
  0x40623f  [ -128396 ]  call cav:0x404230        App:0x404230(arg1:0x4082d8: "listp",arg2:2,arg3:2,arg4:0,arg5:0x408f64: "cd",arg6:0x4082d8: "listp",arg7:arg.0004_in,arg8:1)
  0x406244  [ -128396 ]  add esp, 0x20            esp := (esp + 32) (= (esp_in - 0x1f56c))
  0x406247  [ -128364 ]  jmp cav:0x4066e3         goto 0x4066e3                           
--------------------------------------------------------------------------------
  0x40624c  [ -128364 ]  mov esi, 0x4082c0        esi = 0x4082c0: "printf"                
  0x406251  [ -128364 ]  mov eax, ebp             eax = ebp (= gv_0x412138_in)            
--------------------------------------------------------------------------------
  0x406253  [ -128364 ]  mov dl, (eax)            dl = ?                                  
  0x406255  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x406257  [ -128364 ]  cmp dl, (esi)                                                    
  0x406259  [ -128364 ]  jnz cav:0x406277         if (dl <> ??) goto 0x406277             
--------------------------------------------------------------------------------
  0x40625b  [ -128364 ]  cmp cl, bl                                                       
  0x40625d  [ -128364 ]  jz cav:0x406273          if (cl == 0) goto 0x406273              
--------------------------------------------------------------------------------
  0x40625f  [ -128364 ]  mov dl, 0x1(eax)         dl = ?                                  
  0x406262  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x406264  [ -128364 ]  cmp dl, 0x1(esi)                                                 
  0x406267  [ -128364 ]  jnz cav:0x406277         if (dl <> ??) goto 0x406277             
--------------------------------------------------------------------------------
  0x406269  [ -128364 ]  add eax, 0x2             eax := (eax + 2)                        
  0x40626c  [ -128364 ]  add esi, 0x2             esi := (esi + 2)                        
  0x40626f  [ -128364 ]  cmp cl, bl                                                       
  0x406271  [ -128364 ]  jnz cav:0x406253         if (cl <> 0) goto 0x406253              
--------------------------------------------------------------------------------
  0x406273  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x406275  [ -128364 ]  jmp cav:0x40627c         goto 0x40627c                           
--------------------------------------------------------------------------------
  0x406277  [ -128364 ]  sbb eax, eax             eax = (eax - eax) (= 0) or ((eax - eax) + 1) (= 1)
  0x406279  [ -128364 ]  sbb eax, -0x1            eax = (eax - -1) or ((eax - -1) + 1) (= (eax + 2))
--------------------------------------------------------------------------------
  0x40627c  [ -128364 ]  cmp eax, ebx                                                     
  0x40627e  [ -128364 ]  jnz cav:0x4062c9         if (eax <> 0) goto 0x4062c9             
--------------------------------------------------------------------------------
  0x406280  [ -128364 ]  mov edx, 0x41213c        edx = gv_0x41213c (= gv_0x41213c_in)    
  0x406286  [ -128364 ]  cmp edx, ebx                                                     
  0x406288  [ -128364 ]  jz cav:0x4063bf          if (gv_0x41213c_in == 0) goto 0x4063bf  
--------------------------------------------------------------------------------
  0x40628e  [ -128364 ]  mov eax, 0x1f570(esp,,1) eax = arg.0004 (= arg.0004_in)          
  0x406295  [ -128364 ]  push 0x1                 [0x4062bc:8: 1]                         
  0x406297  [ -128368 ]  push eax                 [0x4062bc:7: arg.0004_in]               
  0x406298  [ -128372 ]  mov edi, edx             edi = edx (= gv_0x41213c_in)            
  0x40629a  [ -128372 ]  or ecx, -0x1             ecx = -1                                
  0x40629d  [ -128372 ]  xor eax, eax             eax = 0                                 
  0x40629f  [ -128372 ]  repne scas               repne scas:pending                      
  0x4062a1  [ -128372 ]  not ecx                  ecx = ( ~ecx)                           
  0x4062a3  [ -128372 ]  push 0x4082c0            [0x4062bc:6: 0x4082c0: "printf"]        
  0x4062a8  [ -128376 ]  push edx                 [0x4062bc:5: gv_0x41213c_in]            
  0x4062a9  [ -128380 ]  dec ecx                  ecx = (ecx - 1)                         
  0x4062aa  [ -128380 ]  push ebx                 [0x4062bc:4: 0]                         
  0x4062ab  [ -128384 ]  push ecx                 [0x4062bc:3: ecx]                       
  0x4062ac  [ -128388 ]  mov edi, edx             edi = edx (= gv_0x41213c_in)            
  0x4062ae  [ -128388 ]  or ecx, -0x1             ecx = -1                                
  0x4062b1  [ -128388 ]  repne scas               repne scas:pending                      
  0x4062b3  [ -128388 ]  not ecx                  ecx = ( ~ecx)                           
  0x4062b5  [ -128388 ]  dec ecx                  ecx = (ecx - 1)                         
  0x4062b6  [ -128388 ]  push ecx                 [0x4062bc:2: ecx]                       
  0x4062b7  [ -128392 ]  push 0x4082c0            [0x4062bc:1: 0x4082c0: "printf"]        
  0x4062bc  [ -128396 ]  call cav:0x404230        App:0x404230(arg1:0x4082c0: "printf",arg2:var.128392,arg3:var.128388,arg4:0,arg5:gv_0x41213c_in,arg6:0x4082c0: "printf",arg7:arg.0004_in,arg8:1)
  0x4062c1  [ -128396 ]  add esp, 0x20            esp := (esp + 32) (= (esp_in - 0x1f56c))
  0x4062c4  [ -128364 ]  jmp cav:0x4066e3         goto 0x4066e3                           
--------------------------------------------------------------------------------
  0x4062c9  [ -128364 ]  mov esi, 0x4082b8        esi = 0x4082b8: "runfile"               
  0x4062ce  [ -128364 ]  mov eax, ebp             eax = ebp (= gv_0x412138_in)            
--------------------------------------------------------------------------------
  0x4062d0  [ -128364 ]  mov dl, (eax)            dl = ?                                  
  0x4062d2  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x4062d4  [ -128364 ]  cmp dl, (esi)                                                    
  0x4062d6  [ -128364 ]  jnz cav:0x4062f4         if (dl <> ??) goto 0x4062f4             
--------------------------------------------------------------------------------
  0x4062d8  [ -128364 ]  cmp cl, bl                                                       
  0x4062da  [ -128364 ]  jz cav:0x4062f0          if (cl == 0) goto 0x4062f0              
--------------------------------------------------------------------------------
  0x4062dc  [ -128364 ]  mov dl, 0x1(eax)         dl = ?                                  
  0x4062df  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x4062e1  [ -128364 ]  cmp dl, 0x1(esi)                                                 
  0x4062e4  [ -128364 ]  jnz cav:0x4062f4         if (dl <> ??) goto 0x4062f4             
--------------------------------------------------------------------------------
  0x4062e6  [ -128364 ]  add eax, 0x2             eax := (eax + 2)                        
  0x4062e9  [ -128364 ]  add esi, 0x2             esi := (esi + 2)                        
  0x4062ec  [ -128364 ]  cmp cl, bl                                                       
  0x4062ee  [ -128364 ]  jnz cav:0x4062d0         if (cl <> 0) goto 0x4062d0              
--------------------------------------------------------------------------------
  0x4062f0  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x4062f2  [ -128364 ]  jmp cav:0x4062f9         goto 0x4062f9                           
--------------------------------------------------------------------------------
  0x4062f4  [ -128364 ]  sbb eax, eax             eax = (eax - eax) (= 0) or ((eax - eax) + 1) (= 1)
  0x4062f6  [ -128364 ]  sbb eax, -0x1            eax = (eax - -1) or ((eax - -1) + 1) (= (eax + 2))
--------------------------------------------------------------------------------
  0x4062f9  [ -128364 ]  cmp eax, ebx                                                     
  0x4062fb  [ -128364 ]  jnz cav:0x406346         if (eax <> 0) goto 0x406346             
--------------------------------------------------------------------------------
  0x4062fd  [ -128364 ]  mov edx, 0x41213c        edx = gv_0x41213c (= gv_0x41213c_in)    
  0x406303  [ -128364 ]  cmp edx, ebx                                                     
  0x406305  [ -128364 ]  jz cav:0x4063bf          if (gv_0x41213c_in == 0) goto 0x4063bf  
--------------------------------------------------------------------------------
  0x40630b  [ -128364 ]  mov eax, 0x1f570(esp,,1) eax = arg.0004 (= arg.0004_in)          
  0x406312  [ -128364 ]  push 0x1                 [0x406339:8: 1]                         
  0x406314  [ -128368 ]  push eax                 [0x406339:7: arg.0004_in]               
  0x406315  [ -128372 ]  mov edi, edx             edi = edx (= gv_0x41213c_in)            
  0x406317  [ -128372 ]  or ecx, -0x1             ecx = -1                                
  0x40631a  [ -128372 ]  xor eax, eax             eax = 0                                 
  0x40631c  [ -128372 ]  repne scas               repne scas:pending                      
  0x40631e  [ -128372 ]  not ecx                  ecx = ( ~ecx)                           
  0x406320  [ -128372 ]  push 0x4082b8            [0x406339:6: 0x4082b8: "runfile"]       
  0x406325  [ -128376 ]  push edx                 [0x406339:5: gv_0x41213c_in]            
  0x406326  [ -128380 ]  dec ecx                  ecx = (ecx - 1)                         
  0x406327  [ -128380 ]  push ebx                 [0x406339:4: 0]                         
  0x406328  [ -128384 ]  push ecx                 [0x406339:3: ecx]                       
  0x406329  [ -128388 ]  mov edi, edx             edi = edx (= gv_0x41213c_in)            
  0x40632b  [ -128388 ]  or ecx, -0x1             ecx = -1                                
  0x40632e  [ -128388 ]  repne scas               repne scas:pending                      
  0x406330  [ -128388 ]  not ecx                  ecx = ( ~ecx)                           
  0x406332  [ -128388 ]  dec ecx                  ecx = (ecx - 1)                         
  0x406333  [ -128388 ]  push ecx                 [0x406339:2: ecx]                       
  0x406334  [ -128392 ]  push 0x4082b8            [0x406339:1: 0x4082b8: "runfile"]       
  0x406339  [ -128396 ]  call cav:0x404230        App:0x404230(arg1:0x4082b8: "runfile",arg2:var.128392,arg3:var.128388,arg4:0,arg5:gv_0x41213c_in,arg6:0x4082b8: "runfile",arg7:arg.0004_in,arg8:1)
  0x40633e  [ -128396 ]  add esp, 0x20            esp := (esp + 32) (= (esp_in - 0x1f56c))
  0x406341  [ -128364 ]  jmp cav:0x4066e3         goto 0x4066e3                           
--------------------------------------------------------------------------------
  0x406346  [ -128364 ]  mov esi, 0x4082c8        esi = 0x4082c8: "killp"                 
  0x40634b  [ -128364 ]  mov eax, ebp             eax = ebp (= gv_0x412138_in)            
--------------------------------------------------------------------------------
  0x40634d  [ -128364 ]  mov dl, (eax)            dl = ?                                  
  0x40634f  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x406351  [ -128364 ]  cmp dl, (esi)                                                    
  0x406353  [ -128364 ]  jnz cav:0x406371         if (dl <> ??) goto 0x406371             
--------------------------------------------------------------------------------
  0x406355  [ -128364 ]  cmp cl, bl                                                       
  0x406357  [ -128364 ]  jz cav:0x40636d          if (cl == 0) goto 0x40636d              
--------------------------------------------------------------------------------
  0x406359  [ -128364 ]  mov dl, 0x1(eax)         dl = ?                                  
  0x40635c  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x40635e  [ -128364 ]  cmp dl, 0x1(esi)                                                 
  0x406361  [ -128364 ]  jnz cav:0x406371         if (dl <> ??) goto 0x406371             
--------------------------------------------------------------------------------
  0x406363  [ -128364 ]  add eax, 0x2             eax := (eax + 2)                        
  0x406366  [ -128364 ]  add esi, 0x2             esi := (esi + 2)                        
  0x406369  [ -128364 ]  cmp cl, bl                                                       
  0x40636b  [ -128364 ]  jnz cav:0x40634d         if (cl <> 0) goto 0x40634d              
--------------------------------------------------------------------------------
  0x40636d  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x40636f  [ -128364 ]  jmp cav:0x406376         goto 0x406376                           
--------------------------------------------------------------------------------
  0x406371  [ -128364 ]  sbb eax, eax             eax = (eax - eax) (= 0) or ((eax - eax) + 1) (= 1)
  0x406373  [ -128364 ]  sbb eax, -0x1            eax = (eax - -1) or ((eax - -1) + 1) (= (eax + 2))
--------------------------------------------------------------------------------
  0x406376  [ -128364 ]  cmp eax, ebx                                                     
  0x406378  [ -128364 ]  jnz cav:0x4063d2         if (eax <> 0) goto 0x4063d2             
--------------------------------------------------------------------------------
  0x40637a  [ -128364 ]  mov edx, 0x41213c        edx = gv_0x41213c (= gv_0x41213c_in)    
  0x406380  [ -128364 ]  cmp edx, ebx                                                     
  0x406382  [ -128364 ]  jz cav:0x4063bf          if (gv_0x41213c_in == 0) goto 0x4063bf  
--------------------------------------------------------------------------------
  0x406384  [ -128364 ]  mov eax, 0x1f570(esp,,1) eax = arg.0004 (= arg.0004_in)          
  0x40638b  [ -128364 ]  push 0x1                 [0x4063b2:8: 1]                         
  0x40638d  [ -128368 ]  push eax                 [0x4063b2:7: arg.0004_in]               
  0x40638e  [ -128372 ]  mov edi, edx             edi = edx (= gv_0x41213c_in)            
  0x406390  [ -128372 ]  or ecx, -0x1             ecx = -1                                
  0x406393  [ -128372 ]  xor eax, eax             eax = 0                                 
  0x406395  [ -128372 ]  repne scas               repne scas:pending                      
  0x406397  [ -128372 ]  not ecx                  ecx = ( ~ecx)                           
  0x406399  [ -128372 ]  push 0x4082c8            [0x4063b2:6: 0x4082c8: "killp"]         
  0x40639e  [ -128376 ]  push edx                 [0x4063b2:5: gv_0x41213c_in]            
  0x40639f  [ -128380 ]  dec ecx                  ecx = (ecx - 1)                         
  0x4063a0  [ -128380 ]  push ebx                 [0x4063b2:4: 0]                         
  0x4063a1  [ -128384 ]  push ecx                 [0x4063b2:3: ecx]                       
  0x4063a2  [ -128388 ]  mov edi, edx             edi = edx (= gv_0x41213c_in)            
  0x4063a4  [ -128388 ]  or ecx, -0x1             ecx = -1                                
  0x4063a7  [ -128388 ]  repne scas               repne scas:pending                      
  0x4063a9  [ -128388 ]  not ecx                  ecx = ( ~ecx)                           
  0x4063ab  [ -128388 ]  dec ecx                  ecx = (ecx - 1)                         
  0x4063ac  [ -128388 ]  push ecx                 [0x4063b2:2: ecx]                       
  0x4063ad  [ -128392 ]  push 0x4082c8            [0x4063b2:1: 0x4082c8: "killp"]         
  0x4063b2  [ -128396 ]  call cav:0x404230        App:0x404230(arg1:0x4082c8: "killp",arg2:var.128392,arg3:var.128388,arg4:0,arg5:gv_0x41213c_in,arg6:0x4082c8: "killp",arg7:arg.0004_in,arg8:1)
  0x4063b7  [ -128396 ]  add esp, 0x20            esp := (esp + 32) (= (esp_in - 0x1f56c))
  0x4063ba  [ -128364 ]  jmp cav:0x4066e3         goto 0x4066e3                           
--------------------------------------------------------------------------------
  0x4063bf  [ -128364 ]  push 0x408f54            [0x4063c4:1: 0x408f54: "Command Error!\n"]
  0x4063c4  [ -128368 ]  call* 0x407114           printf(format:0x408f54: "Command Error!\n") (MSVCRT.dll)
  0x4063ca  [ -128368 ]  add esp, 0x4             esp := (esp + 4) (= (esp_in - 0x1f56c)) 
  0x4063cd  [ -128364 ]  jmp cav:0x4066e3         goto 0x4066e3                           
--------------------------------------------------------------------------------
  0x4063d2  [ -128364 ]  cmp 0x4125ec, ebx                                                
  0x4063d8  [ -128364 ]  jz cav:0x4063bf          if (gv_0x4125ec == 0) goto 0x4063bf     
--------------------------------------------------------------------------------
  0x4063da  [ -128364 ]  mov esi, 0x408f4c        esi = 0x408f4c                          
  0x4063df  [ -128364 ]  lea eax, 0x10(esp,,1)    eax = (esp + 16) (= (esp_in - 0x1f55c)) 
--------------------------------------------------------------------------------
  0x4063e3  [ -128364 ]  mov dl, (eax)            dl = ?                                  
  0x4063e5  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x4063e7  [ -128364 ]  cmp dl, (esi)                                                    
  0x4063e9  [ -128364 ]  jnz cav:0x406407         if (dl <> ??) goto 0x406407             
--------------------------------------------------------------------------------
  0x4063eb  [ -128364 ]  cmp cl, bl                                                       
  0x4063ed  [ -128364 ]  jz cav:0x406403          if (cl == 0) goto 0x406403              
--------------------------------------------------------------------------------
  0x4063ef  [ -128364 ]  mov dl, 0x1(eax)         dl = ?                                  
  0x4063f2  [ -128364 ]  mov cl, dl               cl = dl                                 
  0x4063f4  [ -128364 ]  cmp dl, 0x1(esi)                                                 
  0x4063f7  [ -128364 ]  jnz cav:0x406407         if (dl <> ??) goto 0x406407             
--------------------------------------------------------------------------------
  0x4063f9  [ -128364 ]  add eax, 0x2             eax := (eax + 2)                        
  0x4063fc  [ -128364 ]  add esi, 0x2             esi := (esi + 2)                        
  0x4063ff  [ -128364 ]  cmp cl, bl                                                       
  0x406401  [ -128364 ]  jnz cav:0x4063e3         if (cl <> 0) goto 0x4063e3              
--------------------------------------------------------------------------------
  0x406403  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x406405  [ -128364 ]  jmp cav:0x40640c         goto 0x40640c                           
--------------------------------------------------------------------------------
  0x406407  [ -128364 ]  sbb eax, eax             eax = (eax - eax) (= 0) or ((eax - eax) + 1) (= 1)
  0x406409  [ -128364 ]  sbb eax, -0x1            eax = (eax - -1) or ((eax - -1) + 1) (= (eax + 2))
--------------------------------------------------------------------------------
  0x40640c  [ -128364 ]  cmp eax, ebx                                                     
  0x40640e  [ -128364 ]  jnz cav:0x406416         if (eax <> 0) goto 0x406416             
--------------------------------------------------------------------------------
  0x406410  [ -128364 ]  mov 0x4125ec, ebx        gv_0x4125ec = ebx (= 0)                 
--------------------------------------------------------------------------------
  0x406416  [ -128364 ]  lea edi, 0x10(esp,,1)    edi = (esp + 16) (= (esp_in - 0x1f55c)) 
  0x40641a  [ -128364 ]  or ecx, -0x1             ecx = -1                                
  0x40641d  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x40641f  [ -128364 ]  push 0x1                 [0x406440:8: 1]                         
  0x406421  [ -128368 ]  repne scas               repne scas:pending                      
  0x406423  [ -128368 ]  mov eax, 0x1f574(esp,,1) eax = arg.0004 (= arg.0004_in)          
  0x40642a  [ -128368 ]  lea edx, 0x14(esp,,1)    edx = (esp + 20) (= (esp_in - 0x1f55c)) 
  0x40642e  [ -128368 ]  not ecx                  ecx = ( ~ecx)                           
  0x406430  [ -128368 ]  push eax                 [0x406440:7: arg.0004_in]               
  0x406431  [ -128372 ]  push 0x4082ec            [0x406440:6: 0x4082ec: "shell"]         
  0x406436  [ -128376 ]  dec ecx                  ecx = (ecx - 1)                         
  0x406437  [ -128376 ]  push edx                 [0x406440:5: (esp_in - 0x1f55c)]        
  0x406438  [ -128380 ]  push ebx                 [0x406440:4: 0]                         
  0x406439  [ -128384 ]  push ecx                 [0x406440:3: ecx]                       
  0x40643a  [ -128388 ]  push ecx                 [0x406440:2: ecx]                       
  0x40643b  [ -128392 ]  push 0x4082ec            [0x406440:1: 0x4082ec: "shell"]         
  0x406440  [ -128396 ]  call cav:0x404230        App:0x404230(arg1:0x4082ec: "shell",arg2:var.128392,arg3:var.128388,arg4:0,arg5:(esp_in - 0x1f55c),arg6:0x4082ec: "shell",arg7:arg.0004_in,arg8:1)
  0x406445  [ -128396 ]  add esp, 0x20            esp := (esp + 32) (= (esp_in - 0x1f56c))
  0x406448  [ -128364 ]  jmp cav:0x4066e3         goto 0x4066e3                           
--------------------------------------------------------------------------------
  0x40644d  [ -128364 ]  mov eax, 0x1f570(esp,,1) eax = arg.0004 (= arg.0004_in)          
  0x406454  [ -128364 ]  push 0x1                 var.128368 := 1                         
  0x406456  [ -128368 ]  push eax                 var.128372 := eax                       
  0x406457  [ -128372 ]  push 0x408298            var.128376 := 0x408298                  
  0x40645c  [ -128376 ]  push 0x408298            var.128380 := 0x408298                  
  0x406461  [ -128380 ]  push ebx                 var.128384 := ebx                       
  0x406462  [ -128384 ]  push 0x6                 var.128388 := 6                         
  0x406464  [ -128388 ]  push 0x6                 var.128392 := 6                         
  0x406466  [ -128392 ]  push 0x408298            var.128396 := 0x408298                  
  0x40646b  [ -128396 ]  jmp cav:0x4061d6         goto 0x4061d6                           
--------------------------------------------------------------------------------
  0x406470  [ -128364 ]  mov eax, 0x41213c        eax = gv_0x41213c (= gv_0x41213c_in)    
  0x406475  [ -128364 ]  cmp eax, ebx                                                     
  0x406477  [ -128364 ]  jz cav:0x4063bf          if (gv_0x41213c_in == 0) goto 0x4063bf  
--------------------------------------------------------------------------------
  0x40647d  [ -128364 ]  mov edx, 0x412140        edx = gv_0x412140 (= gv_0x412140_in)    
  0x406483  [ -128364 ]  cmp edx, ebx                                                     
  0x406485  [ -128364 ]  jz cav:0x4063bf          if (gv_0x412140_in == 0) goto 0x4063bf  
--------------------------------------------------------------------------------
  0x40648b  [ -128364 ]  mov ecx, 0x1f570(esp,,1) ecx = arg.0004 (= arg.0004_in)          
  0x406492  [ -128364 ]  push 0x1                 [0x4064b5:8: 1]                         
  0x406494  [ -128368 ]  push ecx                 [0x4064b5:7: arg.0004_in]               
  0x406495  [ -128372 ]  push eax                 [0x4064b5:6: gv_0x41213c_in]            
  0x406496  [ -128376 ]  mov edi, edx             edi = edx (= gv_0x412140_in)            
  0x406498  [ -128376 ]  or ecx, -0x1             ecx = -1                                
  0x40649b  [ -128376 ]  xor eax, eax             eax = 0                                 
  0x40649d  [ -128376 ]  push edx                 [0x4064b5:5: gv_0x412140_in]            
  0x40649e  [ -128380 ]  repne scas               repne scas:pending                      
  0x4064a0  [ -128380 ]  not ecx                  ecx = ( ~ecx)                           
  0x4064a2  [ -128380 ]  dec ecx                  ecx = (ecx - 1)                         
  0x4064a3  [ -128380 ]  push ebx                 [0x4064b5:4: 0]                         
  0x4064a4  [ -128384 ]  push ecx                 [0x4064b5:3: ecx]                       
  0x4064a5  [ -128388 ]  mov edi, edx             edi = edx (= gv_0x412140_in)            
  0x4064a7  [ -128388 ]  or ecx, -0x1             ecx = -1                                
  0x4064aa  [ -128388 ]  repne scas               repne scas:pending                      
  0x4064ac  [ -128388 ]  not ecx                  ecx = ( ~ecx)                           
  0x4064ae  [ -128388 ]  dec ecx                  ecx = (ecx - 1)                         
  0x4064af  [ -128388 ]  push ecx                 [0x4064b5:2: ecx]                       
  0x4064b0  [ -128392 ]  push 0x4082a0            [0x4064b5:1: 0x4082a0: "filestoc"]      
  0x4064b5  [ -128396 ]  call cav:0x404230        App:0x404230(arg1:0x4082a0: "filestoc",arg2:var.128392,arg3:var.128388,arg4:0,arg5:gv_0x412140_in,arg6:gv_0x41213c_in,arg7:arg.0004_in,arg8:1)
  0x4064ba  [ -128396 ]  add esp, 0x20            esp := (esp + 32) (= (esp_in - 0x1f56c))
  0x4064bd  [ -128364 ]  jmp cav:0x4066e3         goto 0x4066e3                           
--------------------------------------------------------------------------------
  0x4064c2  [ -128364 ]  mov edx, 0x41213c        edx = gv_0x41213c (= gv_0x41213c_in)    
  0x4064c8  [ -128364 ]  cmp edx, ebx                                                     
  0x4064ca  [ -128364 ]  jz cav:0x4063bf          if (gv_0x41213c_in == 0) goto 0x4063bf  
--------------------------------------------------------------------------------
  0x4064d0  [ -128364 ]  mov eax, 0x412140        eax = gv_0x412140 (= gv_0x412140_in)    
  0x4064d5  [ -128364 ]  cmp eax, ebx                                                     
  0x4064d7  [ -128364 ]  jz cav:0x4063bf          if (gv_0x412140_in == 0) goto 0x4063bf  
--------------------------------------------------------------------------------
  0x4064dd  [ -128364 ]  mov ecx, 0x1f570(esp,,1) ecx = arg.0004 (= arg.0004_in)          
  0x4064e4  [ -128364 ]  push 0x1                 [0x406507:8: 1]                         
  0x4064e6  [ -128368 ]  push ecx                 [0x406507:7: arg.0004_in]               
  0x4064e7  [ -128372 ]  push eax                 [0x406507:6: gv_0x412140_in]            
  0x4064e8  [ -128376 ]  mov edi, edx             edi = edx (= gv_0x41213c_in)            
  0x4064ea  [ -128376 ]  or ecx, -0x1             ecx = -1                                
  0x4064ed  [ -128376 ]  xor eax, eax             eax = 0                                 
  0x4064ef  [ -128376 ]  push edx                 [0x406507:5: gv_0x41213c_in]            
  0x4064f0  [ -128380 ]  repne scas               repne scas:pending                      
  0x4064f2  [ -128380 ]  not ecx                  ecx = ( ~ecx)                           
  0x4064f4  [ -128380 ]  dec ecx                  ecx = (ecx - 1)                         
  0x4064f5  [ -128380 ]  push ebx                 [0x406507:4: 0]                         
  0x4064f6  [ -128384 ]  push ecx                 [0x406507:3: ecx]                       
  0x4064f7  [ -128388 ]  mov edi, edx             edi = edx (= gv_0x41213c_in)            
  0x4064f9  [ -128388 ]  or ecx, -0x1             ecx = -1                                
  0x4064fc  [ -128388 ]  repne scas               repne scas:pending                      
  0x4064fe  [ -128388 ]  not ecx                  ecx = ( ~ecx)                           
  0x406500  [ -128388 ]  dec ecx                  ecx = (ecx - 1)                         
  0x406501  [ -128388 ]  push ecx                 [0x406507:2: ecx]                       
  0x406502  [ -128392 ]  push 0x4082ac            [0x406507:1: 0x4082ac: "filectos"]      
  0x406507  [ -128396 ]  call cav:0x404230        App:0x404230(arg1:0x4082ac: "filectos",arg2:var.128392,arg3:var.128388,arg4:0,arg5:gv_0x41213c_in,arg6:gv_0x412140_in,arg7:arg.0004_in,arg8:1)
  0x40650c  [ -128396 ]  add esp, 0x20            esp := (esp + 32) (= (esp_in - 0x1f56c))
  0x40650f  [ -128364 ]  jmp cav:0x4066e3         goto 0x4066e3                           
--------------------------------------------------------------------------------
  0x406514  [ -128364 ]  mov ecx, 0x41213c        ecx = gv_0x41213c (= gv_0x41213c_in)    
  0x40651a  [ -128364 ]  cmp ecx, ebx                                                     
  0x40651c  [ -128364 ]  jz cav:0x4063bf          if (gv_0x41213c_in == 0) goto 0x4063bf  
--------------------------------------------------------------------------------
  0x406522  [ -128364 ]  mov eax, 0x412140        eax = gv_0x412140 (= gv_0x412140_in)    
  0x406527  [ -128364 ]  cmp eax, ebx                                                     
  0x406529  [ -128364 ]  jz cav:0x4063bf          if (gv_0x412140_in == 0) goto 0x4063bf  
--------------------------------------------------------------------------------
  0x40652f  [ -128364 ]  mov edx, 0x1f570(esp,,1) edx = arg.0004 (= arg.0004_in)          
  0x406536  [ -128364 ]  push eax                 [0x406541:4: gv_0x412140_in]            
  0x406537  [ -128368 ]  push ecx                 [0x406541:3: gv_0x41213c_in]            
  0x406538  [ -128372 ]  lea eax, 0x98(esp,,1)    eax = (esp + 152) (= (esp_in - 0x1f4dc))
  0x40653f  [ -128372 ]  push edx                 [0x406541:2: arg.0004_in]               
  0x406540  [ -128376 ]  push eax                 [0x406541:1: (esp_in - 0x1f4dc)]        
  0x406541  [ -128380 ]  call cav:0x403a10        App:0x403a10(arg1:(esp_in - 0x1f4dc),arg2:arg.0004_in,arg3:gv_0x41213c_in,arg4:gv_0x412140_in)
  0x406546  [ -128380 ]  add esp, 0x10            esp := (esp + 16) (= (esp_in - 0x1f56c))
  0x406549  [ -128364 ]  jmp cav:0x4066e3         goto 0x4066e3                           
--------------------------------------------------------------------------------
  0x40654e  [ -128364 ]  mov ecx, 0x41213c        ecx = gv_0x41213c (= gv_0x41213c_in)    
  0x406554  [ -128364 ]  cmp ecx, ebx                                                     
  0x406556  [ -128364 ]  jz cav:0x4063bf          if (gv_0x41213c_in == 0) goto 0x4063bf  
--------------------------------------------------------------------------------
  0x40655c  [ -128364 ]  mov eax, 0x412140        eax = gv_0x412140 (= gv_0x412140_in)    
  0x406561  [ -128364 ]  cmp eax, ebx                                                     
  0x406563  [ -128364 ]  jz cav:0x4063bf          if (gv_0x412140_in == 0) goto 0x4063bf  
--------------------------------------------------------------------------------
  0x406569  [ -128364 ]  push ecx                 [0x40657b:4: gv_0x41213c_in]            
  0x40656a  [ -128368 ]  mov ecx, 0x1f574(esp,,1) ecx = arg.0004 (= arg.0004_in)          
  0x406571  [ -128368 ]  push eax                 [0x40657b:3: gv_0x412140_in]            
  0x406572  [ -128372 ]  lea edx, 0x98(esp,,1)    edx = (esp + 152) (= (esp_in - 0x1f4dc))
  0x406579  [ -128372 ]  push ecx                 [0x40657b:2: arg.0004_in]               
  0x40657a  [ -128376 ]  push edx                 [0x40657b:1: (esp_in - 0x1f4dc)]        
  0x40657b  [ -128380 ]  call cav:0x403d70        App:0x403d70(arg1:(esp_in - 0x1f4dc),arg2:arg.0004_in,arg3:gv_0x412140_in,arg4:gv_0x41213c_in)
  0x406580  [ -128380 ]  add esp, 0x10            esp := (esp + 16) (= (esp_in - 0x1f56c))
  0x406583  [ -128364 ]  jmp cav:0x4066e3         goto 0x4066e3                           
--------------------------------------------------------------------------------
  0x406588  [ -128364 ]  mov eax, 0x4080c8        eax = gv_0x4080c8 (= gv_0x4080c8_in)    
  0x40658d  [ -128364 ]  mov 0x412a14, 0x1        gv_0x412a14 = 1                         
  0x406597  [ -128364 ]  push eax                 [0x406598:1: gv_0x4080c8_in]            
  0x406598  [ -128368 ]  call* 0x407094           Sleep(dwMilliseconds:gv_0x4080c8_in) (KERNEL32.dll)
  0x40659e  [ -128364 ]  jmp cav:0x4066e3         goto 0x4066e3                           
--------------------------------------------------------------------------------
  0x4065a3  [ -128364 ]  mov edi, 0x41213c        edi = gv_0x41213c (= gv_0x41213c_in)    
  0x4065a9  [ -128364 ]  cmp edi, ebx                                                     
  0x4065ab  [ -128364 ]  jz cav:0x4063bf          if (gv_0x41213c_in == 0) goto 0x4063bf  
--------------------------------------------------------------------------------
  0x4065b1  [ -128364 ]  or ecx, -0x1             ecx = -1                                
  0x4065b4  [ -128364 ]  xor eax, eax             eax = 0                                 
  0x4065b6  [ -128364 ]  repne scas               repne scas:pending                      
  0x4065b8  [ -128364 ]  not ecx                  ecx = ( ~ecx)                           
  0x4065ba  [ -128364 ]  sub edi, ecx             edi := (edi - ecx)                      
  0x4065bc  [ -128364 ]  mov edx, ecx             edx = ecx                               
  0x4065be  [ -128364 ]  mov esi, edi             esi = edi                               
  0x4065c0  [ -128364 ]  mov edi, 0x412c40        edi = 0x412c40                          
  0x4065c5  [ -128364 ]  shr ecx, 0x2             ecx = (ecx >> 2) (= (ecx / 4))          
  0x4065c8  [ -128364 ]  rep movs                 rep movs:pending                        
  0x4065ca  [ -128364 ]  mov ecx, edx             ecx = edx                               
  0x4065cc  [ -128364 ]  and ecx, 0x3             ecx = (ecx & 3)                         
  0x4065cf  [ -128364 ]  rep movs                 rep movs:pending                        
  0x4065d1  [ -128364 ]  mov 0x4125ec, ebx        gv_0x4125ec = ebx (= 0)                 
  0x4065d7  [ -128364 ]  jmp cav:0x4066e3         goto 0x4066e3                           
--------------------------------------------------------------------------------
  0x4065dc  [ -128364 ]  mov eax, 0x41213c        eax = gv_0x41213c (= gv_0x41213c_in)    
  0x4065e1  [ -128364 ]  cmp eax, ebx                                                     
  0x4065e3  [ -128364 ]  jz cav:0x4063bf          if (gv_0x41213c_in == 0) goto 0x4063bf  
--------------------------------------------------------------------------------
  0x4065e9  [ -128364 ]  mov ecx, 0x1f570(esp,,1) ecx = arg.0004 (= arg.0004_in)          
  0x4065f0  [ -128364 ]  push ecx                 [0x4065f4:3: arg.0004_in]               
  0x4065f1  [ -128368 ]  push 0x1                 [0x4065f4:2: 1]                         
  0x4065f3  [ -128372 ]  push eax                 [0x4065f4:1: gv_0x41213c_in]            
  0x4065f4  [ -128376 ]  call cav:0x4052f0        App:0x4052f0(arg1:gv_0x41213c_in,arg2:1,arg3:arg.0004_in)
  0x4065f9  [ -128376 ]  jmp cav:0x4066e0         goto 0x4066e0                           
--------------------------------------------------------------------------------
  0x4065fe  [ -128364 ]  mov eax, 0x41213c        eax = gv_0x41213c (= gv_0x41213c_in)    
  0x406603  [ -128364 ]  cmp eax, ebx                                                     
  0x406605  [ -128364 ]  jz cav:0x4063bf          if (gv_0x41213c_in == 0) goto 0x4063bf  
--------------------------------------------------------------------------------
  0x40660b  [ -128364 ]  mov edx, 0x1f570(esp,,1) edx = arg.0004 (= arg.0004_in)          
  0x406612  [ -128364 ]  push edx                 var.128368 := edx                       
  0x406613  [ -128368 ]  push 0x1                 var.128372 := 1                         
  0x406615  [ -128372 ]  push eax                 var.128376 := eax                       
  0x406616  [ -128376 ]  jmp cav:0x4066db         goto 0x4066db                           
--------------------------------------------------------------------------------
  0x40661b  [ -128364 ]  mov eax, 0x41213c        eax = gv_0x41213c (= gv_0x41213c_in)    
  0x406620  [ -128364 ]  cmp eax, ebx                                                     
  0x406622  [ -128364 ]  jz cav:0x4063bf          if (gv_0x41213c_in == 0) goto 0x4063bf  
--------------------------------------------------------------------------------
  0x406628  [ -128364 ]  mov ecx, 0x1f570(esp,,1) ecx = arg.0004 (= arg.0004_in)          
  0x40662f  [ -128364 ]  push ecx                 [0x406631:2: arg.0004_in]               
  0x406630  [ -128368 ]  push eax                 [0x406631:1: gv_0x41213c_in]            
  0x406631  [ -128372 ]  call cav:0x4055d0        App:0x4055d0(arg1:gv_0x41213c_in,arg2:arg.0004_in)
  0x406636  [ -128372 ]  add esp, 0x8             esp := (esp + 8) (= (esp_in - 0x1f56c)) 
  0x406639  [ -128364 ]  jmp cav:0x4066e3         goto 0x4066e3                           
--------------------------------------------------------------------------------
  0x40663e  [ -128364 ]  mov eax, 0x41213c        eax = gv_0x41213c (= gv_0x41213c_in)    
  0x406643  [ -128364 ]  cmp eax, ebx                                                     
  0x406645  [ -128364 ]  jz cav:0x4063bf          if (gv_0x41213c_in == 0) goto 0x4063bf  
--------------------------------------------------------------------------------
  0x40664b  [ -128364 ]  mov edx, 0x1f570(esp,,1) edx = arg.0004 (= arg.0004_in)          
  0x406652  [ -128364 ]  push edx                 [0x406654:2: arg.0004_in]               
  0x406653  [ -128368 ]  push eax                 [0x406654:1: gv_0x41213c_in]            
  0x406654  [ -128372 ]  call cav:0x405240        App:0x405240(arg1:gv_0x41213c_in,arg2:arg.0004_in)
  0x406659  [ -128372 ]  add esp, 0x8             esp := (esp + 8) (= (esp_in - 0x1f56c)) 
  0x40665c  [ -128364 ]  jmp cav:0x4066e3         goto 0x4066e3                           
--------------------------------------------------------------------------------
  0x406661  [ -128364 ]  mov eax, 0x41213c        eax = gv_0x41213c (= gv_0x41213c_in)    
  0x406666  [ -128364 ]  cmp eax, ebx                                                     
  0x406668  [ -128364 ]  jz cav:0x4063bf          if (gv_0x41213c_in == 0) goto 0x4063bf  
--------------------------------------------------------------------------------
  0x40666e  [ -128364 ]  mov ecx, 0x1f570(esp,,1) ecx = arg.0004 (= arg.0004_in)          
  0x406675  [ -128364 ]  push ecx                 [0x406677:2: arg.0004_in]               
  0x406676  [ -128368 ]  push eax                 [0x406677:1: gv_0x41213c_in]            
  0x406677  [ -128372 ]  call cav:0x405190        App:0x405190(arg1:gv_0x41213c_in,arg2:arg.0004_in)
  0x40667c  [ -128372 ]  add esp, 0x8             esp := (esp + 8) (= (esp_in - 0x1f56c)) 
  0x40667f  [ -128364 ]  jmp cav:0x4066e3         goto 0x4066e3                           
--------------------------------------------------------------------------------
  0x406681  [ -128364 ]  mov eax, 0x41213c        eax = gv_0x41213c (= gv_0x41213c_in)    
  0x406686  [ -128364 ]  cmp eax, ebx                                                     
  0x406688  [ -128364 ]  jz cav:0x4063bf          if (gv_0x41213c_in == 0) goto 0x4063bf  
--------------------------------------------------------------------------------
  0x40668e  [ -128364 ]  mov edx, 0x1f570(esp,,1) edx = arg.0004 (= arg.0004_in)          
  0x406695  [ -128364 ]  push edx                 [0x406697:2: arg.0004_in]               
  0x406696  [ -128368 ]  push eax                 [0x406697:1: gv_0x41213c_in]            
  0x406697  [ -128372 ]  call cav:0x4050e0        App:0x4050e0(arg1:gv_0x41213c_in,arg2:arg.0004_in)
  0x40669c  [ -128372 ]  add esp, 0x8             esp := (esp + 8) (= (esp_in - 0x1f56c)) 
  0x40669f  [ -128364 ]  jmp cav:0x4066e3         goto 0x4066e3                           
--------------------------------------------------------------------------------
  0x4066a1  [ -128364 ]  mov eax, 0x1f570(esp,,1) eax = arg.0004 (= arg.0004_in)          
  0x4066a8  [ -128364 ]  push eax                 [0x4066ae:2: arg.0004_in]               
  0x4066a9  [ -128368 ]  push 0x4088a4            [0x4066ae:1: 0x4088a4]                  
  0x4066ae  [ -128372 ]  call cav:0x4055d0        App:0x4055d0(arg1:0x4088a4,arg2:arg.0004_in)
  0x4066b3  [ -128372 ]  add esp, 0x8             esp := (esp + 8) (= (esp_in - 0x1f56c)) 
  0x4066b6  [ -128364 ]  jmp cav:0x4066e3         goto 0x4066e3                           
--------------------------------------------------------------------------------
  0x4066b8  [ -128364 ]  mov ecx, 0x1f570(esp,,1) ecx = arg.0004 (= arg.0004_in)          
  0x4066bf  [ -128364 ]  push ecx                 [0x4066c6:3: arg.0004_in]               
  0x4066c0  [ -128368 ]  push ebx                 [0x4066c6:2: 0]                         
  0x4066c1  [ -128372 ]  push 0x412d60            [0x4066c6:1: 0x412d60]                  
  0x4066c6  [ -128376 ]  call cav:0x4052f0        App:0x4052f0(arg1:0x412d60,arg2:0,arg3:arg.0004_in)
  0x4066cb  [ -128376 ]  jmp cav:0x4066e0         goto 0x4066e0                           
--------------------------------------------------------------------------------
  0x4066cd  [ -128364 ]  mov edx, 0x1f570(esp,,1) edx = arg.0004 (= arg.0004_in)          
  0x4066d4  [ -128364 ]  push edx                 var.128368 := edx                       
  0x4066d5  [ -128368 ]  push ebx                 var.128372 := ebx                       
  0x4066d6  [ -128372 ]  push 0x412d60            var.128376 := 0x412d60                  
--------------------------------------------------------------------------------
  0x4066db  [ -128376 ]  call cav:0x404e60        App:0x404e60(arg1:var.128376,arg2:var.128372,arg3:arg.0004_in)
--------------------------------------------------------------------------------
  0x4066e0  [ -128376 ]  add esp, 0xc             esp := (esp + 12) (= (esp_in - 0x1f56c))
--------------------------------------------------------------------------------
  0x4066e3  [ -128364 ]  cmp 0x412a14, ebx                                                
  0x4066e9  [ -128364 ]  jz cav:0x40588c          if (gv_0x412a14 == 0) goto 0x40588c     
--------------------------------------------------------------------------------
  0x4066ef  [ -128364 ]  pop ebp                  restore ebp                             
  0x4066f0  [ -128360 ]  mov eax, 0x1             eax = 1                                 
  0x4066f5  [ -128360 ]  pop edi                  restore edi                             
  0x4066f6  [ -128356 ]  pop esi                  restore esi                             
  0x4066f7  [ -128352 ]  mov 0x412a14, eax        gv_0x412a14 = eax (= 1)                 
  0x4066fc  [ -128352 ]  pop ebx                  restore ebx                             
  0x4066fd  [ -128348 ]  add esp, 0x1f55c         esp := (esp + 0x1f55c) (= esp_in)       
  0x406703  [    0 ]  ret                      return (eax (= 1))                      
--------------------------------------------------------------------------------
  0x406704  [ -128360 ]  mov eax, 0x1             eax = 1                                 
  0x406709  [ -128360 ]  pop edi                  restore edi                             
  0x40670a  [ -128356 ]  pop esi                  restore esi                             
  0x40670b  [ -128352 ]  mov 0x412a14, eax        gv_0x412a14 = eax (= 1)                 
  0x406710  [ -128352 ]  pop ebx                  restore ebx                             
  0x406711  [ -128348 ]  add esp, 0x1f55c         esp := (esp + 0x1f55c) (= esp_in)       
  0x406717  [    0 ]  ret                      return (eax (= 1))                      
--------------------------------------------------------------------------------
